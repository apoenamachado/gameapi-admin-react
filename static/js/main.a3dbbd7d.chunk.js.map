{"version":3,"sources":["modules/studio.js","modules/game.js","modules/user.js","modules/index.js","store.js","containers/about/index.js","containers/Cards/index.js","containers/Tables/index.js","containers/Labels/index.js","containers/Studio/Dashboard.js","containers/Studio/Games.js","containers/Studio/Form.js","containers/Game/Form.js","containers/Studio/index.js","containers/Studios/List.js","containers/Studios/index.js","containers/Game/Dashboard.js","containers/Game/Settings.js","containers/Game/index.js","containers/Auth/index.js","containers/Site/Home.js","components/NavBar/AdminNavbar.js","components/NavBar/PublicNavbar.js","components/Footer/PublicFooter.js","components/Footer/AdminFooter.js","containers/App.js","index.js"],"names":["API_URL","process","studioInitialState","studios","studio","addStudio","token","onSuccess","onError","dispatch","formData","FormData","append","name","slug","description","image","fetch","concat","method","headers","Authorization","body","then","response","ok","json","value","data","type","catch","err","console","log","updateStudio","id","getStudio","listStudio","setCurrentStudio","removeStudio","Content-Type","gameInitialState","games","game","addGame","resume","genre","updateGame","getGame","listGame","setCurrentGame","removeGame","initialState","isAuthenticated","login","username","password","callback","JSON","stringify","logout","combineReducers","state","arguments","length","undefined","action","Object","assign","toConsumableArray","objectSpread","filter","row","user","history","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","About","react_default","a","createElement","Container","style","marginTop","Segment","basic","Header","as","Component","CardsView","icon","textAlign","Subheader","Card","Group","itemsPerRow","raised","href","header","meta","Content","Image","floated","size","src","Meta","Description","extra","className","Button","color","wrapped","ui","Icon","Feed","Event","Label","Date","content","Summary","TablesView","Table","collapsing","Row","HeaderCell","Body","Cell","rounded","LabelsView","alt","avatar","spaced","Grid","columns","Column","fluid","label","corner","Detail","Menu","compact","Item","floating","ribbon","StudioDashboardView","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loading","prevProps","prevState","snapshot","url","push","Loader","active","stackable","stretched","width","subheader","connect","_ref","bindActionCreators","changePage","gamesTempAdd","date","downloads","StudioGamesView","loading2","_this2","setState","location","pathname","_this3","setTimeout","_this4","placeholder","primary","onClick","go","tempGame","Math","floor","random","labelPosition","Or","text","doubling","map","index","Link","Popup","trigger","to","ImgCurrent","element","padding","target","StudioFormView","message","error","handleChange","e","defineProperty","handleChangeFile","files","handleSubmit","update","add","match","params","reset","obj","campos","POST","_campos","that","keys","forEach","temp","field","campo","includes","Form","Field","key","Input","onChange","Form_ImgCurrent","_erros","msgs","item","attached","Message","success","erros","onSubmit","montaCampos","_ref2","GameFormView","max_length","TextArea","Select","options","choicesToSelect","choices","Game_Form_ImgCurrent","select","display_name","StudioView","dados","goBack","pointing","vertical","react_router","exact","path","component","StudiosListView","react","StudiosView","GameSettingsView","enviar","_this$state","TempHeader","LeaderBoardView","Game_TempHeader","DlcView","StorageView","GameView","GameDashboardView","LoginView","iconPosition","verticalAlign","Divider","features","SiteHomeView","inverted","minHeight","fontSize","fontWeight","marginBottom","i","AdminNavbar","Fragment","react_router_dom","Dropdown","position","React","PublicNavbar","border","secondary","PublicFooter","App","rest","objectWithoutProperties","render","from","NavBar_AdminNavbar","NavBar_PublicNavbar","Footer_PublicFooter","_ref3","document","querySelector","es","store","lib","containers_App"],"mappings":"o/EASMA,EAAUC,qBAMVC,EAAqB,CACzBC,QAAQ,GACRC,OAAO,MAuDIC,EAAY,SAACD,EAAQE,EAAOC,EAAWC,GAClD,OAAO,SAAAC,GAGL,IAAIC,EAAW,IAAIC,SASnB,OAPAD,EAASE,OAAO,OAAQR,EAAOS,MAC/BH,EAASE,OAAO,OAAQR,EAAOU,MAC/BJ,EAASE,OAAO,cAAeR,EAAOW,aAClCX,EAAOY,OACTN,EAASE,OAAT,QAAyBR,EAAOY,OAG3BC,MAAK,GAAAC,OAAIlB,EAAJ,YAAuB,CACjCmB,OAAQ,OACRC,QAAS,CACPC,cAAiB,SAASf,GAE5BgB,KAAMZ,IACLa,KAAK,SAASC,GACf,GAAGA,EAASC,GACV,OAAOD,EAASE,OAEhBF,EAASE,OAAOH,KAAK,SAASI,GAE5B,OADAnB,EAAQmB,IACD,MAGVJ,KAAK,SAASK,GACf,QAAGA,IACDnB,EAAS,CACPoB,KApGgB,aAqGhBzB,OAAQwB,IAEVrB,EAAUqB,IACH,KAIVE,MAAM,SAAUC,GACfC,QAAQC,IAAI,SAAUF,OAMfG,EAAe,SAAC9B,EAAQE,EAAOC,EAAWC,GACrD,OAAO,SAAAC,GAELuB,QAAQC,IAAI,WAAY7B,GAGxB,IAAIM,EAAW,IAAIC,SAYnB,OAXAD,EAASE,OAAO,KAAMR,EAAO+B,IAC7BzB,EAASE,OAAO,OAAQR,EAAOS,MAC/BH,EAASE,OAAO,OAAQR,EAAOU,MAC/BJ,EAASE,OAAO,cAAeR,EAAOW,aACnCX,EAAOY,QACRgB,QAAQC,IAAI,0BAA4B7B,EAAOY,OACpB,kBAAjBZ,EAAOY,OACfN,EAASE,OAAT,QAAyBR,EAAOY,QAI7BC,MAAK,GAAAC,OAAIlB,EAAJ,YAAAkB,OAAsBd,EAAO+B,GAA7B,KAAoC,CAC9ChB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,GAE5BgB,KAAMZ,IACLa,KAAK,SAASC,GACf,GAAGA,EAASC,GACV,OAAOD,EAASE,OAEhBF,EAASE,OAAOH,KAAK,SAASI,GAE5B,OADAnB,EAAQmB,IACD,MAGVJ,KAAK,SAASK,GAEf,GADAI,QAAQC,IAAI,uBAAwBL,GACjCA,EAYD,OAXAnB,EAAS,CACPoB,KArJwB,qBAsJxBzB,OAAQwB,IAQVrB,EAAUqB,IACH,MAgBFQ,EAAY,SAAChC,EAAQE,EAAOC,EAAWC,GAClD,OAAO,SAAAC,GAEL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,YAAAkB,OAAsBd,EAAO+B,GAA7B,KAAoC,CAC9ChB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,KAE3BiB,KAAK,SAASC,GACf,OAAGA,EAASC,GACHD,EAASE,QAEhBM,QAAQC,IAAI,oBAAqBT,GACjChB,EAAQgB,IACD,KAERD,KAAK,SAASK,GAEf,GADAI,QAAQC,IAAI,oBAAqBL,GAC9BA,EAQD,OADArB,EAAUqB,IACH,MAmBFS,EAAa,SAAC/B,GACzB,OAAO,SAAAG,GACL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,YAAuB,CACjCmB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,KAE3BiB,KAAK,SAASC,GACf,QAAGA,EAASC,IACHD,EAASE,SAGjBH,KAAK,SAASK,GAKf,OAJAnB,EAAS,CACPoB,KA3OmB,cA4OnB1B,QAASyB,KAEJ,IACNE,MAAM,SAAUC,GACjB,OAAO,MASAO,EAAmB,SAAClC,GAC/B,OAAO,SAAAK,GACHA,EAAS,CACPoB,KA3P0B,qBA4P1BzB,OAAQA,MAUHmC,EAAe,SAACnC,EAAQE,GACnC,OAAO,SAAAG,GAEL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,YAAAkB,OAAsBd,EAAO+B,IAAM,CAC7ChB,OAAQ,SACRC,QAAS,CACPoB,eAAgB,mBAChBnB,cAAiB,SAASf,KAO3BiB,KAAK,SAASC,GACf,QAAGA,EAASC,KACVO,QAAQC,IAAI,iBAAkBT,GAC9BQ,QAAQC,IAAI,qBAAsB7B,GAClCK,EAAS,CACPoB,KAxRmB,gBAyRnBzB,OAAQA,KAEH,KAIR0B,MAAM,SAAUC,GACjB,OAAO,MC9RP/B,EAAUC,qBAMVwC,EAAmB,CACvBC,MAAM,GACNC,KAAK,MAyDMC,EAAU,SAACD,EAAMrC,EAAOC,EAAWC,GAC9C,OAAO,SAAAC,GAGL,IAAIC,EAAW,IAAIC,SAanB,OAXAD,EAASE,OAAO,SAAU+B,EAAKvC,QAC/BM,EAASE,OAAO,OAAQ+B,EAAK9B,MAC7BH,EAASE,OAAO,SAAU+B,EAAKE,QAC/BnC,EAASE,OAAO,QAAS+B,EAAKG,OAC9BpC,EAASE,OAAO,cAAe+B,EAAK5B,aACjC4B,EAAK3B,OACmB,kBAAf2B,EAAK3B,OACbN,EAASE,OAAT,QAAyB+B,EAAK3B,OAI3BC,MAAK,GAAAC,OAAIlB,EAAJ,UAAqB,CAC/BmB,OAAQ,OACRC,QAAS,CACPC,cAAiB,SAASf,GAE5BgB,KAAMZ,IACLa,KAAK,SAASC,GACf,GAAGA,EAASC,GACV,OAAOD,EAASE,OAEhBF,EAASE,OAAOH,KAAK,SAASI,GAE5B,OADAnB,EAAQmB,IACD,MAGVJ,KAAK,SAASK,GACf,QAAGA,IACDnB,EAAS,CACPoB,KA1Gc,WA2Gdc,KAAMf,IAERrB,EAAUqB,IACH,KAIVE,MAAM,SAAUC,GACfC,QAAQC,IAAI,SAAUF,OAMfgB,EAAa,SAACJ,EAAMrC,EAAOC,EAAWC,GACjD,OAAO,SAAAC,GAELuB,QAAQC,IAAI,SAAUU,GAGtB,IAAIjC,EAAW,IAAIC,SAanB,OAZAD,EAASE,OAAO,KAAM+B,EAAKR,IAC3BzB,EAASE,OAAO,SAAU+B,EAAKvC,QAC/BM,EAASE,OAAO,OAAQ+B,EAAK9B,MAC7BH,EAASE,OAAO,SAAU+B,EAAKE,QAC/BnC,EAASE,OAAO,QAAS+B,EAAKG,OAC9BpC,EAASE,OAAO,cAAe+B,EAAK5B,aACjC4B,EAAK3B,OACmB,kBAAf2B,EAAK3B,OACbN,EAASE,OAAT,QAAyB+B,EAAK3B,OAI3BC,MAAK,GAAAC,OAAIlB,EAAJ,UAAAkB,OAAoByB,EAAKR,GAAzB,KAAgC,CAC1ChB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,GAE5BgB,KAAMZ,IACLa,KAAK,SAASC,GACf,GAAGA,EAASC,GACV,OAAOD,EAASE,OAEhBF,EAASE,OAAOH,KAAK,SAASI,GAE5B,OADAnB,EAAQmB,IACD,MAGVJ,KAAK,SAASK,GAEf,GADAI,QAAQC,IAAI,qBAAsBL,GAC/BA,EAYD,OAXAnB,EAAS,CACPoB,KA5JsB,mBA6JtBc,KAAMf,IAQRrB,EAAUqB,IACH,MAeFoB,EAAU,SAACL,EAAMrC,EAAOC,EAAWC,GAC9C,OAAO,SAAAC,GAEL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,UAAAkB,OAAoByB,EAAKR,GAAzB,KAAgC,CAC1ChB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,KAE3BiB,KAAK,SAASC,GACf,OAAGA,EAASC,GACHD,EAASE,QAEhBM,QAAQC,IAAI,kBAAmBT,GAC/BhB,EAAQgB,IACD,KAERD,KAAK,SAASK,GAEf,GADAI,QAAQC,IAAI,kBAAmBL,GAC5BA,EAQD,OADArB,EAAUqB,IACH,MAmBFqB,EAAW,SAAC3C,EAAOF,EAAQG,GACtC,OAAO,SAAAE,GACL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,kBAAAkB,OAA4Bd,EAAO+B,IAAM,CACnDhB,OAAQ,MACRC,QAAS,CACPC,cAAiB,SAASf,KAE3BiB,KAAK,SAASC,GACf,QAAGA,EAASC,IACHD,EAASE,SAGjBH,KAAK,SAASK,GAMf,OALAnB,EAAS,CACPoB,KAjPiB,YAkPjBa,MAAOd,IAETrB,EAAUqB,IACH,IACNE,MAAM,SAAUC,GACjB,OAAO,MASAmB,EAAiB,SAACP,GAC7B,OAAO,SAAAlC,GACHA,EAAS,CACPoB,KAlQwB,mBAmQxBc,KAAMA,MAUDQ,EAAa,SAACR,EAAMrC,EAAOC,GACtC,OAAO,SAAAE,GAEL,OAAOQ,MAAK,GAAAC,OAAIlB,EAAJ,UAAAkB,OAAoByB,EAAKR,IAAM,CACzChB,OAAQ,SACRC,QAAS,CACPoB,eAAgB,mBAChBnB,cAAiB,SAASf,KAO3BiB,KAAK,SAASC,GACf,QAAGA,EAASC,KACVhB,EAAS,CACPoB,KA7RiB,cA8RjBc,KAAMA,IAERpC,KACO,KAIRuB,MAAM,SAAUC,GACjB,OAAO,MC1SPqB,EAAe,CACnBjB,GAAI,KACJkB,iBAAgB,EAChB/C,MAAO,MAwBIgD,EAAQ,SAACC,EAAUC,EAAUC,GACxC,OAAO,SAAAhD,GACL,OAAOQ,MAAK,GAAAC,OAAIjB,qBAAJ,oBAAqD,CAC/DkB,OAAQ,OACRC,QAAS,CAACoB,eAAe,oBACzBlB,KAAMoC,KAAKC,UAAU,CACnBJ,SAASA,EACTC,SAASA,MAEVjC,KAAK,SAASC,GAEf,OADAQ,QAAQC,IAAI,aAAcT,KACvBA,EAASC,IACHD,EAASE,SAGjBH,KAAK,SAASK,GAEf,OADAI,QAAQC,IAAI,gBAAiBL,EAAMA,EAAKtB,OACrCsB,GAAQA,EAAKtB,OACdG,EAAS,CACPoB,KAjDoB,iBAkDpBvB,MAAOsB,EAAKtB,MACZ+C,iBAAgB,IAElBI,GAAS,IACF,IAEPhD,EAAS,CACPoB,KAxDsB,qBA0DxB4B,GAAS,IACF,KAER3B,MAAM,SAAUC,GAGjB,OAFAC,QAAQC,IAAI,gBAAiBF,GAC7B0B,GAAS,IACF,MAKAG,EAAS,SAACH,GACrB,OAAO,SAAAhD,GACLA,EAAS,CACPoB,KAxE0B,qBA0E5B4B,GAAS,KCtEEI,cAAgB,CAC7BzD,OHca,WAAwC,IAAvC0D,EAAuCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B7D,EAAoBgE,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOrC,MACb,IAnBsB,aAoBpB,OAAOsC,OAAOC,OAAO,GAAIN,EAAO,CAC9B3D,QAAO,GAAAe,OAAAiD,OAAAE,EAAA,EAAAF,CACFL,EAAM3D,SADJ,CAEL+D,EAAO9D,WAGb,IAxBuB,cAyBrB,OAAO+D,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEE3D,QAAS+D,EAAO/D,UAEpB,IA5B8B,qBA8B1B,OADA6B,QAAQC,IAAI,uBAAwBiC,EAAO9D,QACpC+D,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEE1D,OAAQ8D,EAAO9D,SAErB,IAjCyB,gBAmCvB,OADA4B,QAAQC,IAAI,kBAAmBiC,EAAO9D,QAC/B+D,OAAOC,OAAO,GAAIN,EAAO,CAC9B3D,QAAQgE,OAAAE,EAAA,EAAAF,CACHL,EAAM3D,QAAQoE,OAAO,SAAAC,GAAG,OAAIA,EAAIrC,IAAM+B,EAAO9D,OAAO+B,QAe7D,QACE,OAAO2B,IGrDXnB,KFaa,WAAsC,IAArCmB,EAAqCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BtB,EAAkByB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOrC,MACb,IAnBoB,WAoBlB,OAAOsC,OAAOC,OAAO,GAAIN,EAAO,CAC9BpB,MAAK,GAAAxB,OAAAiD,OAAAE,EAAA,EAAAF,CACAL,EAAMpB,OADN,CAEHwB,EAAOvB,SAGb,IAxBqB,YAyBnB,OAAOwB,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEEpB,MAAOwB,EAAOxB,QAElB,IA5B4B,mBA8BxB,OADAV,QAAQC,IAAI,qBAAsBiC,EAAOvB,MAClCwB,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEEnB,KAAMuB,EAAOvB,OAEnB,IAjCuB,cAmCrB,OADAX,QAAQC,IAAI,gBAAiBiC,EAAOvB,MAC7BwB,OAAOC,OAAO,GAAIN,EAAO,CAC9BpB,MAAMyB,OAAAE,EAAA,EAAAF,CACDL,EAAMpB,MAAM6B,OAAO,SAAAC,GAAG,OAAIA,EAAIrC,IAAM+B,EAAOvB,KAAKR,QAezD,QACE,OAAO2B,IEpDXW,KDCa,WAAkC,IAAjCX,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOrC,MACb,IAX0B,iBAaxB,OADAG,QAAQC,IAAI,sBAAuBiC,GAC5BC,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEExD,MAAM4D,EAAO5D,MACb+C,gBAAgBa,EAAOb,kBAE3B,IAjB4B,mBAmB1B,OADArB,QAAQC,IAAI,gBACLkC,OAAAG,EAAA,EAAAH,CAAA,GACFL,EADL,CAEExD,MAAM,KACN+C,iBAAgB,IAEpB,QACE,OAAOS,MEpBAY,EAAUC,MAIjBC,EAAa,CAACC,IAAOC,2BAAiBJ,IAUtCK,EAAoBC,IAAOC,WAAP,GACxBC,IAAeD,WAAf,EAAmBL,IADK1D,OAXR,KAgBHiE,cACbC,wBAAcV,EAAdU,CAAuBC,GAlBJ,GAoBnBN,+FCqCcO,kLAjDZtD,QAAQC,IAAI,oDAIZ,OACEsD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAI7BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,GACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,MAAX,SACAT,EAAAC,EAAAC,cAAA,+2BAcAF,EAAAC,EAAAC,cAAA,y3BA7BQQ,0DCoWJC,kLAlWZlE,QAAQC,IAAI,oDAIZ,OACEsD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAG3BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKG,MAAI,EAACC,UAAU,UAA/B,QAEEb,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,0BAKFd,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAa,GACvBjB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEG,QAAM,EACNC,KAAK,0BACLC,OAAO,+BACPC,KAAK,SACL7F,YAAY,uGAGdwE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEI,KAAK,0BACLC,OAAO,+BACPC,KAAK,SACL7F,YAAY,uGAGdwE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEI,KAAK,0BACLC,OAAO,+BACPC,KAAK,SACL7F,YAAY,uGAGdwE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEI,KAAK,0BACLC,OAAO,+BACPC,KAAK,SACL7F,YAAY,wGAKhBwE,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAa,GACzBjB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAM,GACVlB,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,QAAQ,QACRC,KAAK,OACLC,IAAI,gEAGN1B,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,sBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,0BACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,4CACsC5B,EAAAC,EAAAC,cAAA,gCAGxCF,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,kBACb9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,SAApB,WAGAhC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,OAApB,cAMNhC,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,QAAQ,QACRC,KAAK,OACLC,IAAI,gEAEN1B,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,qBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iBACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,4CACsC5B,EAAAC,EAAAC,cAAA,6BAGxCF,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,kBACb9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,SAApB,WAGAhC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,OAApB,cAMNhC,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,QAAQ,QACRC,KAAK,OACLC,IAAI,gEAEN1B,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,uBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iBACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,iEAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,kBACb9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,SAApB,WAGAhC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,OAApB,cAMNhC,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,QAAQ,QACRC,KAAK,OACLC,IAAI,gEAEN1B,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,uBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iBACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,iEAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,kBACb9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,SAApB,WAGAhC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,EAACyB,MAAM,OAApB,eAWVhC,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAa,GACrBjB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAM,GACZlB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DO,SAAO,EAACC,IAAI,IACtFlC,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,qBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iCACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,gDAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,aADb,kBAOJ0E,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,8DAA8DO,SAAO,EAACC,IAAI,IACrFlC,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,qBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iCACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,gDAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,aADb,kBAOJ0E,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,8DAA8DO,SAAO,EAACC,IAAI,IACrFlC,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,qBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iCACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,gDAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,aADb,kBAOJ0E,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DO,SAAO,EAACC,IAAI,IACtFlC,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,qBACAR,EAAAC,EAAAC,cAACa,EAAA,EAAKY,KAAN,iCACA3B,EAAAC,EAAAC,cAACa,EAAA,EAAKa,YAAN,gDAIF5B,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB7B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,aADb,mBAUJ0E,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAa,GAEzBjB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAM,GACVlB,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,uBAEFR,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,cACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,uBADZ,YACsCF,EAAAC,EAAAC,cAAA,qBADtC,aAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,mBAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,iEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,YACwCF,EAAAC,EAAAC,cAAA,sBADxC,gBAUVF,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,uBAEFR,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,cACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,uBADZ,YACsCF,EAAAC,EAAAC,cAAA,qBADtC,aAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,mBAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,iEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,YACwCF,EAAAC,EAAAC,cAAA,sBADxC,gBASVF,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,uBAEFR,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,cACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,uBADZ,YACsCF,EAAAC,EAAAC,cAAA,qBADtC,aAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,gEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,mBAMJF,EAAAC,EAAAC,cAACkC,EAAA,EAAKC,MAAN,KACErC,EAAAC,EAAAC,cAACkC,EAAA,EAAKE,MAAN,CAAY7G,MAAM,iEAClBuE,EAAAC,EAAAC,cAACkC,EAAA,EAAKd,QAAN,KACEtB,EAAAC,EAAAC,cAACkC,EAAA,EAAKG,KAAN,CAAWC,QAAQ,eACnBxC,EAAAC,EAAAC,cAACkC,EAAA,EAAKK,QAAN,kBACYzC,EAAAC,EAAAC,cAAA,yBADZ,YACwCF,EAAAC,EAAAC,cAAA,sBADxC,0BAjVMQ,uBC4FRgC,mLA3FZjG,QAAQC,IAAI,oDAIZ,OACEsD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAE7BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKG,MAAI,EAACC,UAAU,UAA/B,SAEEb,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,yBAKFd,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAOC,YAAU,GACf5C,EAAAC,EAAAC,cAACyC,GAAA,EAAMnC,OAAP,KACER,EAAAC,EAAAC,cAACyC,GAAA,EAAME,IAAP,KACE7C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,WACA9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,eACA9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,aACA9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,wBACA9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,oBACA9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMG,WAAP,qBAGJ9C,EAAAC,EAAAC,cAACyC,GAAA,EAAMI,KAAP,KACE/C,EAAAC,EAAAC,cAACyC,GAAA,EAAME,IAAP,KACE7C,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,WACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAEEhD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKhF,OAAK,GACnBuE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,6DAA6DuB,SAAO,EAACxB,KAAK,QACrFzB,EAAAC,EAAAC,cAACM,EAAA,EAAOc,QAAR,cAEEtB,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,kCAKNd,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,eACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,wBACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,eACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAAYhD,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,GAAb,YAEdP,EAAAC,EAAAC,cAACyC,GAAA,EAAME,IAAP,KACA7C,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,WACEhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAEEhD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKhF,OAAK,GACnBuE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,gEAAgEuB,SAAO,EAACxB,KAAK,SACxFzB,EAAAC,EAAAC,cAACM,EAAA,EAAOc,QAAR,cAEEtB,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,qCAKNd,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,eACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,wBACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,YACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAAYhD,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,GAAb,YAEdP,EAAAC,EAAAC,cAACyC,GAAA,EAAME,IAAP,KACA7C,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,WACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAEEhD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKhF,OAAK,GACnBuE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,6DAA6DuB,SAAO,EAACxB,KAAK,SACrFzB,EAAAC,EAAAC,cAACM,EAAA,EAAOc,QAAR,cAEEtB,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,oCAKJd,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,eACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,wBACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,eACAhD,EAAAC,EAAAC,cAACyC,GAAA,EAAMK,KAAP,KAAYhD,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQxB,OAAK,GAAb,uBAlFDG,2CCkJTwC,mLA5IZzG,QAAQC,IAAI,oDAIZ,OACEsD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAE7BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKG,MAAI,EAACC,UAAU,UAA/B,SAEEb,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,yBAKFd,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAI0C,IAAI,mBAChBnD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAO6B,QAAM,EAACC,OAAO,QAAQ3B,IAAI,+DAA+DyB,IAAI,oBADtG,UAIAnD,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAI0C,IAAI,mBAChBnD,EAAAC,EAAAC,cAAA,OAAKwB,IAAI,+DAA+DyB,IAAI,oBAD9E,UAKAnD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,GACfvD,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEkC,OAAK,EACLC,MAAO,CAAEjD,GAAI,IAAKkD,OAAQ,OAAQ/C,KAAM,SACxCc,IAAI,2DACJyB,IAAI,qBAIRnD,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEkC,OAAK,EACLC,MAAO,CAAEjD,GAAI,IAAKkD,OAAQ,OAAS/C,KAAM,SACzCc,IAAI,2DACJyB,IAAI,qBAIRnD,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEkC,OAAK,EACLC,MAAO,CAAEjD,GAAI,IAAKuB,MAAO,MAAO2B,OAAQ,QAAS/C,KAAM,QACvDc,IAAI,2DACJyB,IAAI,sBAKRnD,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,OAAOvG,OAAK,EAAC0H,IAAI,mBACnCnD,EAAAC,EAAAC,cAAA,OAAKwB,IAAI,iEAAiEyB,IAAI,6BADhF,WAGEnD,EAAAC,EAAAC,cAACoC,GAAA,EAAMsB,OAAP,gBAEF5D,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,OAAOvG,OAAK,EAAC0H,IAAI,mBACnCnD,EAAAC,EAAAC,cAAA,OAAKwB,IAAI,8DAA8DyB,IAAI,6BAD7E,WAGEnD,EAAAC,EAAAC,cAACoC,GAAA,EAAMsB,OAAP,gBAEF5D,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,SAASvG,OAAK,GAChCuE,EAAAC,EAAAC,cAAA,OAAKwB,IAAI,kEAAkEyB,IAAI,6BADjF,QAGEnD,EAAAC,EAAAC,cAACoC,GAAA,EAAMsB,OAAP,oBAIF5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMC,SAAO,GACb9D,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAWtD,GAAG,KACZT,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,SADb,YAEE0E,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAON,MAAM,MAAMgC,UAAQ,GAA3B,OAIFhE,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAWtD,GAAG,KACZT,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,UADb,WAEE0E,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAON,MAAM,OAAOgC,UAAQ,GAA5B,QAMFhE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,GACfvD,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASY,QAAM,GACblB,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,MAAMiC,QAAM,GAAhC,YAGAjE,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DyB,IAAI,6BAE9EnD,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,OAAOiC,QAAM,GAAjC,aAGAjE,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DyB,IAAI,+BAIlFnD,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,SAASiC,OAAO,SAApC,SAGAjE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DyB,IAAI,6BAE9EnD,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAO7B,GAAG,IAAIuB,MAAM,OAAOiC,OAAO,SAAlC,WAGAjE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+DAA+DyB,IAAI,yCAnIjEzC,uBCcnBwD,eAGJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAJ,IACjBE,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAsF,GAAAO,KAAAH,KAAMH,KACD5F,MAAQ,CACXmG,SAAQ,GAHON,+HAWCO,EAAWC,EAAWC,+BAoBvCC,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,oCAIxB,OAAGR,KAAK/F,MAAMmG,QAEV1E,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQC,QAAM,KAKhBjF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACpBZ,KAAK,aACL4B,QAAS,cAAe8B,KAAKH,MAAMtJ,OAAOS,KAC1C+J,UAAU,8CAtDE3E,aA6EnB4E,qBAZU,SAAAC,KAAGrG,KAAH,MAAuB,CAC9CrE,OADuB0K,EAAS1K,OACjBA,SAGU,SAAAK,GAAQ,OACjCsK,YACE,CACEC,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbpB,iCCjFIwB,GAAe,CACnB,CAAEpK,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,sFAClJ,CAAEH,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,wDAClJ,CAAEH,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,4GAClJ,CAAEH,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,iHAClJ,CAAEH,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,mJAClJ,CAAEH,KAAM,cAAeqK,KAAK,aAAcrI,OAAQ,2EAAsEsI,UAAW,QAASnK,MAAM,wIAG9IoK,eAEJ,SAAAA,EAAY1B,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAuB,IACjBzB,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAiH,GAAApB,KAAAH,KAAMH,KACD5F,MAAQ,CACX0C,YAAY,EACZyD,SAAQ,EACRoB,UAAS,GALM1B,mFASA,IAAA2B,EAAAzB,KAEjBA,KAAK0B,SAAS,CAACtB,SAAQ,IACvBJ,KAAKH,MAAMzG,SAAS4G,KAAKH,MAAMpJ,MAAOuJ,KAAKH,MAAMtJ,OAAQ,WACvDkL,EAAKC,SAAS,CAACtB,SAAQ,MAEzBJ,KAAKH,MAAMxG,eAAe,iDAGRgH,EAAWC,EAAWC,GACrCF,EAAUsB,SAASC,SAAa5B,KAAKH,MAAM8B,SAASC,oCAKtDpB,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,sCAGf1H,GAAK,IAAA+I,EAAA7B,KACdA,KAAK0B,SAAS,CAACF,UAAS,IACxBM,sBAAW,WACTD,EAAKhC,MAAMvG,WAAWR,EAAM+I,EAAKhC,MAAMpJ,MAAO,WAAKoL,EAAKH,SAAS,CAACF,UAAS,OAC1E,sCAIG,IAAAO,EAAA/B,KACN,OAAGA,KAAK/F,MAAMmG,QAEV1E,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQC,QAAM,KAMW,IAA1BX,KAAKH,MAAMhH,MAAMsB,OAEduB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASgG,aAAW,GACpBtG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQI,MAAI,GACVZ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,SADb,yEAIA0E,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQwE,SAAO,EAACC,QAAS,WAAMH,EAAKI,GAAL,WAAA9K,OAAmB0K,EAAKlC,MAAMtJ,OAAO+B,GAArC,gBAA/B,aAKFoD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC5BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OAChBZ,KAAK,UACL4B,QAAS,QACT6C,UAAU,sBAIlBrF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEyE,QAAU,WACR,IAAIE,EAAWhB,GAAciB,KAAKC,MAAsB,EAAhBD,KAAKE,WAE7CH,EAAS9J,GAAK,KACd8J,EAAS7L,OAASwL,EAAKlC,MAAMtJ,OAAOiK,IACpC4B,EAASnJ,MAAQ,SACjBmJ,EAASnF,MAAQ,KAEjB8E,EAAKlC,MAAM9G,QAASqJ,EAAUL,EAAKlC,MAAMpJ,MAAO,WAAM0B,QAAQC,IAAI,oBAAqB,WAAKD,QAAQC,IAAI,8BAE1G8E,QAAQ,QAERQ,MAAM,OACNQ,QAAQ,cACR5B,KAAK,MACLkG,cAAc,SAId9G,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACAyE,QAAS,WAAMH,EAAKI,GAAL,WAAA9K,OAAmB0K,EAAKlC,MAAMtJ,OAAO+B,GAArC,eACf4E,QAAQ,QAERQ,MAAM,QACNQ,QAAQ,UACR5B,KAAK,MACLkG,cAAc,SAKhB9G,EAAAC,EAAAC,cAAC6B,EAAA,EAAOf,MAAR,CAAcQ,QAAQ,SACpBxB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQyE,QAAS,WAAKH,EAAKL,SAAS,CAAC/E,YAAY,MAAjD,KACAjB,EAAAC,EAAAC,cAAC6B,EAAA,EAAOgF,GAAR,CAAWC,KAAK,MAChBhH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQyE,QAAS,WAAKH,EAAKL,SAAS,CAAC/E,YAAY,MAAjD,OAKJjB,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAaqD,KAAK/F,MAAM0C,YAAagG,UAAQ,EAAC/B,WAAS,GAE9DZ,KAAKH,MAAMhH,MAAM+J,IAAI,SAAC9J,EAAM+J,GAAP,OACpBnH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACE2D,QAAS2B,EAAK9H,MAAMuH,SACpB5E,QAAM,EACNzF,MAAO2B,EAAK3B,MACZ2F,OAAQhE,EAAK9B,KAGb+F,KAAMjE,EAAKE,OACXmD,GAAI2G,KAEJvF,MACE7B,EAAAC,EAAAC,cAAC6B,EAAA,EAAOf,MAAR,CAAcT,OAAK,EAACkB,KAAK,SAASD,QAAQ,SACxCxB,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,MAAM,MAAMpB,KAAK,kBAAkB4F,QAAS,WAAKH,EAAKzI,WAAWR,MAAcoF,QAAQ,WAChHxC,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQnB,KAAK,WAAWH,GAAI2G,KAAMG,GAAE,SAAA5L,OAAWyB,EAAKR,GAAhB,eAAoC4F,QAAQ,aACjGxC,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQnB,KAAK,OAAOH,GAAI2G,KAAMG,GAAE,SAAA5L,OAAWyB,EAAKR,MAAW4F,QAAQ,yBAhIlF9B,aAmKf4E,qBAlBU,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAMrE,EAAT0K,EAAS1K,OAAQuC,EAAjBmI,EAAiBnI,KAAjB,MAA6B,CACpDrC,MAAOmE,EAAKnE,MACZF,OAAQA,EAAOA,OACfsC,MAAOC,EAAKD,QAGa,SAAAjC,GAAQ,OACjCsK,YACE,CACE7H,iBACAD,WACAL,UACAO,cAGF1C,IAGWoK,CAGbO,2CCxKI2B,GAAa,SAACrD,GAChB,OACEA,EAAMsD,QAAQhM,MACZuE,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACsH,QAAQ,QACjB1H,EAAAC,EAAAC,cAAA,KAAGiB,KAAMgD,EAAMsD,QAAQhM,MAAOkM,OAAO,UACnC3H,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAKyC,EAAMsD,QAAQhM,MAAOgG,KAAK,SAASQ,SAAO,EAACgB,SAAO,MAGnE,MAKD2E,eAEJ,SAAAA,EAAYzD,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAsD,IACjBxD,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAgJ,GAAAnD,KAAAH,KAAMH,KAGR5F,MAAQ,CACNmG,SAAQ,EACRmD,SAAQ,EACRC,OAAM,EACNlL,GAAI,GACJtB,KAAM,GACNC,KAAM,GACNC,YAAa,GACbC,MAAO,IAZU2I,EAenB2D,aAAe,SAACC,EAADzC,GAAA,IAAMjK,EAANiK,EAAMjK,KAAMc,EAAZmJ,EAAYnJ,MAAZ,OAAwBgI,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBtD,EAAOc,KAf5CgI,EAgBnB8D,iBAAmB,SAACF,GAClB5D,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBoJ,EAAEL,OAAOrM,KAAO0M,EAAEL,OAAOQ,MAAM,MAjB/B/D,EAoBnBgE,aAAe,WACbhE,EAAK7F,MAAM3B,GAAGwH,EAAKiE,SAASjE,EAAKkE,OArBhBlE,mFAyBjB3H,QAAQC,IAAI,sBAAuB4H,KAAKH,MAAMoE,MAAMC,QACjDlE,KAAKH,MAAMoE,MAAMC,OAAO5L,IACzB0H,KAAK0B,SAAS1B,KAAKH,MAAMtJ,mDAIT8J,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,WAAa5B,KAAKH,MAAM8B,SAASC,UAClD5B,KAAK/F,MAAM3B,iCAOb,IAAAmJ,EAAAzB,KACHA,KAAK0B,SAAS,CAACtB,SAAQ,EAAMmD,SAAQ,EAAOC,OAAM,IAClDxD,KAAKH,MAAMrJ,UAAUwJ,KAAK/F,MAAO+F,KAAKH,MAAMpJ,MAC1C,SAACsB,GACIA,IACDI,QAAQC,IAAI,sBAAuBL,GACnC0J,EAAKC,SAAS,CAAC6B,SAAQ,EAAMnD,SAAQ,IACrCqB,EAAKU,GAAG,iBACRV,EAAK0C,UAGT,SAACjM,GACCuJ,EAAKC,SAAS,CAAC6B,SAAQ,EAAOC,MAAMtL,EAAKkI,SAAQ,uCAI/C,IAAAyB,EAAA7B,KACNA,KAAK0B,SAAS,CAACtB,SAAQ,EAAMmD,SAAQ,EAAOC,OAAM,IAClDxD,KAAKH,MAAMxH,aAAa2H,KAAK/F,MAAO+F,KAAKH,MAAMpJ,MAC7C,SAACsB,GACIA,IACDI,QAAQC,IAAI,sBAAuBL,GACnC8J,EAAKH,SAAS,CAAC6B,SAAQ,EAAMnD,SAAQ,MAGzC,SAAClI,GACC2J,EAAKH,SAAS,CAAC6B,SAAQ,EAAOC,MAAMtL,EAAKkI,SAAQ,iCAIpDI,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,yCAOxB,IAAI4D,EAAMC,GAAOC,KACbC,EAAW,GACXC,EAAOxE,KAMX,OALA1F,OAAOmK,KAAKL,GAAKM,QAAQ,SAAS7B,GAChC,IAAI8B,EAAOP,EAAIvB,GACf8B,EAAK3N,KAAO6L,EACZ0B,EAAQ9D,KAAKkE,KAERJ,EAAQ3B,IAAK,SAACgC,EAAO/B,GAC1B,OAAO2B,EAAKK,MAAMD,mCAIhBA,GACJ,IAAI,CAAC,OAAO,KAAK,MAAM,cAAcE,SAASF,EAAM5N,MAClD,OAAQ4N,EAAM5M,MACZ,IAAK,OACL,IAAK,SACD,OACE0D,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYC,IAAKL,EAAM5N,MACvB0E,EAAAC,EAAAC,cAAA,aAAQgJ,EAAMxF,OACd1D,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACIlD,YAAa4C,EAAMxF,MACnBpI,KAAM4N,EAAM5N,KACZc,MAAOkI,KAAK/F,MAAM2K,EAAM5N,MACxBmO,SAAUnF,KAAKyD,gBAKzB,IAAK,eACD,OACE/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYC,IAAKL,EAAM5N,MACrB0E,EAAAC,EAAAC,cAAA,aAAQgJ,EAAM5N,MACd0E,EAAAC,EAAAC,cAAA,SAAO5D,KAAK,OAAOhB,KAAM4N,EAAM5N,KAAMmO,SAAUnF,KAAK4D,mBACnD5D,KAAK/F,MAAM3B,GAAGoD,EAAAC,EAAAC,cAACwJ,GAAD,CAAYjC,QAASnD,KAAKH,MAAMtJ,SAAW,uCAWtE,IAAI6N,EAAMpE,KAAK/F,MAAMuJ,MACjB6B,EAAU,GAKd,OAJA/K,OAAOmK,KAAKL,GAAKM,QAAQ,SAAS7B,GAChC,IAAI8B,EAAO,CAAC3N,KAAM6L,EAAOyC,KAAMlB,EAAIvB,GAAO,IAC1CwC,EAAO5E,KAAKkE,KAEPU,EAAOzC,IAAK,SAAC2C,EAAM1C,GAAP,OACjBnH,EAAAC,EAAAC,cAAA,eAAO2J,EAAKvO,KAAZ,KAAoBuO,EAAKD,yCAQ3B,OACE5J,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAE5BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASwJ,UAAQ,GACf9J,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACtBZ,KAAK,UACL4B,QAAS,SACT6C,UAAU,wBAIdrF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAEGgE,KAAK/F,MAAMsJ,QACV7H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEC,SAAO,EACP5I,OAAO,6BACPoB,QAAQ,8CACT,KAEF8B,KAAK/F,MAAMuJ,MACZ9H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEjC,OAAK,EACL1G,OAAO,uBAEPoB,QAAS8B,KAAK2F,UAEf,KAGDjK,EAAAC,EAAAC,cAACmJ,GAAA,EAAD,CAAMa,SAAU5F,KAAK8D,aAAc1D,QAASJ,KAAK/F,MAAMmG,SAEtDJ,KAAK6F,cA4CNnK,EAAAC,EAAAC,cAACmJ,GAAA,EAAKtH,OAAN,CAAaS,QAAQ,OAAO+D,SAAO,EAAC/E,QAAQ,QAAQC,KAAK,uBA7N1Cf,aA2Pd4E,qBAfU,SAAA8E,GAAA,IAAGlL,EAAHkL,EAAGlL,KAAMrE,EAATuP,EAASvP,OAAT,MAAuB,CAC9CE,MAAOmE,EAAKnE,MACZF,OAAQA,EAAOA,SAGU,SAAAK,GAAQ,OACjCsK,YACE,CACE1K,YACA6B,eACA8I,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbsC,wBCzQIJ,GAAa,SAACrD,GAChB,OACEA,EAAMsD,QAAQhM,MACZuE,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACsH,QAAQ,QACjB1H,EAAAC,EAAAC,cAAA,KAAGiB,KAAMgD,EAAMsD,QAAQhM,MAAOkM,OAAO,UACnC3H,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAKyC,EAAMsD,QAAQhM,MAAOgG,KAAK,SAASQ,SAAO,EAACgB,SAAO,MAGnE,MAIDoH,eAEJ,SAAAA,EAAYlG,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAA+F,IACjBjG,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAyL,GAAA5F,KAAAH,KAAMH,KAGR5F,MAAQ,CACNmG,SAAQ,EACRmD,SAAQ,EACRC,OAAM,EACNjN,OAAO,GACP+B,GAAI,GACJtB,KAAM,GACNgC,OAAQ,GACRC,MAAO,GACP/B,YAAa,GACbC,MAAO,IAdU2I,EAiBnB2D,aAAe,SAACC,EAADzC,GAAA,IAAMjK,EAANiK,EAAMjK,KAAMc,EAAZmJ,EAAYnJ,MAAZ,OAAwBgI,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBtD,EAAOc,KAjB5CgI,EAkBnB8D,iBAAmB,SAACF,GAClB5D,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBoJ,EAAEL,OAAOrM,KAAO0M,EAAEL,OAAOQ,MAAM,MAnB/B/D,EAsBnBgE,aAAe,WACbhE,EAAK7F,MAAM3B,GAAGwH,EAAKiE,SAASjE,EAAKkE,OAvBhBlE,mFA2BjB3H,QAAQC,IAAI,sBAAuB4H,KAAKH,MAAMoE,MAAMC,QACpDlE,KAAK0B,SAAS,CAACnL,OAAOyJ,KAAKH,MAAMtJ,OAAOiK,MAErCR,KAAKH,MAAMoE,MAAMC,OAAO5L,IACzB0H,KAAK0B,SAAS1B,KAAKH,MAAM/G,iDAITuH,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,WAAa5B,KAAKH,MAAM8B,SAASC,UAClD5B,KAAK/F,MAAM3B,IACZ0H,KAAK0B,SAAS1B,KAAKH,MAAM/G,oCAM1B,IAAA2I,EAAAzB,KACHA,KAAK0B,SAAS,CAACtB,SAAQ,EAAMmD,SAAQ,EAAOC,OAAM,IAClDxD,KAAKH,MAAM9G,QAAQiH,KAAK/F,MAAO+F,KAAKH,MAAMpJ,MACxC,SAACsB,GACIA,IACDI,QAAQC,IAAIL,GACZ0J,EAAKC,SAAS,CAAC6B,SAAQ,EAAMnD,SAAQ,IACrCqB,EAAKU,GAAL,WAAA9K,OAAmBoK,EAAK5B,MAAMtJ,OAAO+B,GAArC,aAIJ,SAACJ,GACCuJ,EAAKC,SAAS,CAAC6B,SAAQ,EAAOC,MAAMtL,EAAKkI,SAAQ,uCAI/C,IAAAyB,EAAA7B,KACNA,KAAK0B,SAAS,CAACtB,SAAQ,EAAMmD,SAAQ,EAAOC,OAAM,IAClDxD,KAAKH,MAAM3G,WAAW8G,KAAK/F,MAAO+F,KAAKH,MAAMpJ,MAC3C,SAACsB,GACIA,GACD8J,EAAKH,SAAS,CAAC6B,SAAQ,EAAMnD,SAAQ,KAGzC,SAAClI,GACC2J,EAAKH,SAAS,CAAC6B,SAAQ,EAAOC,MAAMtL,EAAKkI,SAAQ,iCAIpDI,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,yCAOxB,IAAI4D,EAAMC,GAAOC,KACbC,EAAW,GACXC,EAAOxE,KAMX,OALA1F,OAAOmK,KAAKL,GAAKM,QAAQ,SAAS7B,GAChC,IAAI8B,EAAOP,EAAIvB,GACf8B,EAAK3N,KAAO6L,EACZ0B,EAAQ9D,KAAKkE,KAERJ,EAAQ3B,IAAK,SAACgC,EAAO/B,GAC1B,OAAO2B,EAAKK,MAAMD,mCAIhBA,GACJ,IAAI,CAAC,OAAO,KAAK,MAAM,cAAcE,SAASF,EAAM5N,MAClD,OAAQ4N,EAAM5M,MACZ,IAAK,OACL,IAAK,SACH,OACE0D,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYC,IAAKL,EAAM5N,MACvB0E,EAAAC,EAAAC,cAAA,aAAQgJ,EAAMxF,OAEbwF,EAAMoB,WACLtK,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACElD,YAAa4C,EAAMxF,MACnBpI,KAAM4N,EAAM5N,KACZc,MAAOkI,KAAK/F,MAAM2K,EAAM5N,MACxBmO,SAAUnF,KAAKyD,eAGjB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKkB,SAAN,CACEjE,YAAa4C,EAAMxF,MACnBpI,KAAM4N,EAAM5N,KACZc,MAAOkI,KAAK/F,MAAM2K,EAAM5N,MACxBmO,SAAUnF,KAAKyD,gBAMvB,IAAK,SACH,OACE/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYC,IAAKL,EAAM5N,MACvB0E,EAAAC,EAAAC,cAAA,aAAQgJ,EAAMxF,OACd1D,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CACElE,YAAa4C,EAAMxF,MACnBpI,KAAM4N,EAAM5N,KACZmP,QAASnG,KAAKoG,gBAAgBxB,EAAMyB,SACpCvO,MAAOkI,KAAK/F,MAAM2K,EAAM5N,MACxBmO,SAAUnF,KAAKyD,gBAKrB,IAAK,eACD,OACE/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYC,IAAKL,EAAM5N,MACrB0E,EAAAC,EAAAC,cAAA,aAAQgJ,EAAM5N,MACd0E,EAAAC,EAAAC,cAAA,SAAO5D,KAAK,OAAOhB,KAAM4N,EAAM5N,KAAMmO,SAAUnF,KAAK4D,mBACnD5D,KAAK/F,MAAM3B,GAAGoD,EAAAC,EAAAC,cAAC0K,GAAD,CAAYnD,QAASnD,KAAKH,MAAM/G,OAAS,+CAUtDuN,GACd,IAAIE,EAAS,GAUb,OATAF,EAAQzD,IAAI,SAAC2C,GACXgB,EAAO9F,KACL,CACEwE,IAAKM,EAAKzN,MACVA,MAAMyN,EAAKzN,MACX4K,KAAK6C,EAAKiB,iBAITD,kCAIP,IAAInC,EAAMpE,KAAK/F,MAAMuJ,MACjB6B,EAAU,GAKd,OAJA/K,OAAOmK,KAAKL,GAAKM,QAAQ,SAAS7B,GAChC,IAAI8B,EAAO,CAAC3N,KAAM6L,EAAOyC,KAAMlB,EAAIvB,GAAO,IAC1CwC,EAAO5E,KAAKkE,KAEPU,EAAOzC,IAAK,SAAC2C,EAAM1C,GAAP,OACjBnH,EAAAC,EAAAC,cAAA,eAAO2J,EAAKvO,KAAZ,KAAoBuO,EAAKD,yCAQ3B,OACE5J,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC5BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASwJ,UAAQ,GACf9J,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACtBZ,KAAK,UACL4B,QAAS,OACT6C,UAAU,sBAIdrF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGgE,KAAK/F,MAAMsJ,QACV7H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEC,SAAO,EACP5I,OAAO,2BACPoB,QAAQ,4CACT,KACF8B,KAAK/F,MAAMuJ,MACZ9H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEjC,OAAK,EACL1G,OAAO,qBAEPoB,QAAS8B,KAAK2F,UAEf,KAEDjK,EAAAC,EAAAC,cAACmJ,GAAA,EAAD,CAAMa,SAAU5F,KAAK8D,aAAc1D,QAASJ,KAAK/F,MAAMmG,SACpDJ,KAAK6F,cACNnK,EAAAC,EAAAC,cAACmJ,GAAA,EAAKtH,OAAN,CAAaS,QAAQ,OAAO+D,SAAO,EAAC/E,QAAQ,QAAQC,KAAK,uBAtN9Cf,aAkPZ4E,qBAhBU,SAAA8E,GAAA,IAAGlL,EAAHkL,EAAGlL,KAAMrE,EAATuP,EAASvP,OAAQuC,EAAjBgN,EAAiBhN,KAAjB,MAA6B,CACpDrC,MAAOmE,EAAKnE,MACZF,OAAQA,EAAOA,OACfuC,KAAMA,EAAKA,OAGc,SAAAlC,GAAQ,OACjCsK,YACE,CACEnI,UACAG,aACAiI,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGb+E,ICjQIU,eAEJ,SAAAA,EAAY5G,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAyG,IACjB3G,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAmM,GAAAtG,KAAAH,KAAMH,KACD5F,MAAQ,CACXmG,SAAQ,EACRzD,YAAY,GAJGmD,mFASjBE,KAAKzH,uDAGa8H,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,SAAa5B,KAAKH,MAAM8B,SAASC,6CAK9C,IAAAH,EAAAzB,KACTA,KAAK0B,SAAS,CAACtB,SAAQ,IACvBJ,KAAKH,MAAMtH,UAAU,CAACD,GAAG0H,KAAKH,MAAMoE,MAAMC,OAAO5L,IAAK0H,KAAKH,MAAMpJ,MAAO,SAACiQ,GACvEjF,EAAK5B,MAAMpH,iBAAiBiO,GAC5BjF,EAAKC,SAAS,CAACtB,SAAQ,KAEzB,SAAClI,GACCC,QAAQC,IAAI,4BAA6BF,GACzCuJ,EAAKC,SAAS,CAACtB,SAAQ,IACvBqB,EAAK5B,MAAMhF,QAAQ8L,sCAapBnG,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAK,WAAaT,KAAKH,MAAMoE,MAAMC,OAAO5L,GAAMkI,oCAG7D,IAAAqB,EAAA7B,KACN,OAAGA,KAAK/F,MAAMmG,QAEV1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,GACVP,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQC,QAAM,GAAd,uBAMNjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7BL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa4B,MAAO,GAClBpF,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMqH,UAAQ,EAACC,UAAQ,GACrBnL,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,YACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,KACvB7F,KAAK,sBAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,QACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,WACvB7F,KAAK,gBAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,WACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,cACvB7F,KAAK,qBAIbZ,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACkL,EAAA,OAAD,KACEpL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWrH,KAC3ClE,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW1F,KAEjD7F,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAW3D,KACpD5H,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAWlB,iBAzF7C3J,aAmHV4E,qBAfU,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAH,MAAuB,CAC9CtE,QADuB2K,EAAS1K,OAChBD,QAChBG,MAAOmE,EAAKnE,QAGa,SAAAG,GAAQ,OACjCsK,YACE,CACE3I,YACAE,mBACA0I,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbyF,IC/HIS,eAEJ,SAAAA,EAAYrH,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAkH,IACjBpH,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA4M,GAAA/G,KAAAH,KAAMH,KACD5F,MAAQ,CACX0C,YAAY,GAHGmD,mFAQjBE,KAAKH,MAAMrH,WAAWwH,KAAKH,MAAMpJ,oDAIjC0B,QAAQC,IAAI,oEAIZD,QAAQC,IAAI,kEAGMiI,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,SAAa5B,KAAKH,MAAM8B,SAASC,oCAKtDpB,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAK,WAAYD,wCAGzBjK,GACXyJ,KAAKH,MAAMnH,aAAanC,EAAQyJ,KAAKH,MAAMpJ,wCAGrC,IAAAgL,EAAAzB,KACN,OAA+B,IAA5BA,KAAKH,MAAMvJ,QAAQ6D,OAEhBuB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASgG,aAAW,GACpBtG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQI,MAAI,GACVZ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,SADb,uEAIA0E,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQwE,SAAO,EAACC,QAAS,WAAMT,EAAKU,GAAG,UAAvC,eAKJzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC9BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQgB,QAAQ,QACdxB,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,YACX0E,EAAAC,EAAAC,cAACM,EAAA,EAAOc,QAAR,eAEAtB,EAAAC,EAAAC,cAACM,EAAA,EAAOM,UAAR,8BAIAd,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEyE,QAAS,WAAMT,EAAKU,GAAG,SACvBjF,QAAQ,QACRQ,MAAM,OACNQ,QAAQ,UACR5B,KAAK,MACLkG,cAAc,SAElB9G,EAAAC,EAAAC,cAAC6B,EAAA,EAAOf,MAAR,CAAcQ,QAAQ,SACpBxB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQyE,QAAS,WAAKT,EAAKC,SAAS,CAAC/E,YAAY,MAAjD,KACAjB,EAAAC,EAAAC,cAAC6B,EAAA,EAAOgF,GAAR,CAAWC,KAAK,MAChBhH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQyE,QAAS,WAAKT,EAAKC,SAAS,CAAC/E,YAAY,MAAjD,OAIFjB,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAaqD,KAAK/F,MAAM0C,YAAagG,UAAQ,EAAC/B,WAAS,GAChEZ,KAAKH,MAAMvJ,QAAQsM,IAAI,SAACrM,EAAQsM,GAAT,OACtBnH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEwI,IAAG,QAAA5N,OAAUwL,GAEb1G,GAAI,IACJS,QAAM,EACNc,MAAM,QAKNhC,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,KACEtB,EAAAC,EAAAC,cAACuL,EAAA,SAAD,KAEEzL,EAAAC,EAAAC,cAACa,EAAA,EAAKP,OAAN,KAAc3F,EAAOS,QAKzB0E,EAAAC,EAAAC,cAACa,EAAA,EAAKO,QAAN,CAAcO,OAAK,GAEjB7B,EAAAC,EAAAC,cAAC6B,EAAA,EAAOf,MAAR,CAAcT,OAAK,EAACkB,KAAK,SAASD,QAAQ,SACxCxB,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,MAAM,MAAMpB,KAAK,kBAAkB4F,QAAS,WAAKT,EAAK/I,aAAanC,MAAgB2H,QAAQ,WAEpHxC,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQnB,KAAK,WAAWH,GAAI2G,KAAMG,GAAE,WAAA5L,OAAad,EAAO+B,GAApB,eAAwC4F,QAAQ,aACrGxC,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQnB,KAAK,OAAOH,GAAI2G,KAAMG,GAAE,WAAA5L,OAAad,EAAO+B,GAApB,YAAqC4F,QAAQ,UAC9FxC,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAOC,QAAUtH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQnB,KAAK,OAAOH,GAAI2G,KAAMG,GAAE,WAAA5L,OAAad,EAAO+B,MAAW4F,QAAQ,yBAvGhF9B,aAqIf4E,qBAfU,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAMrE,EAAT0K,EAAS1K,OAAT,MAAuB,CAC9CE,MAAOmE,EAAKnE,MACZH,QAASC,EAAOD,UAGS,SAAAM,GAAQ,OACjCsK,YACE,CACE1I,aACAE,eACAyI,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbkG,IC5HIE,eAEJ,SAAAA,EAAYvH,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAoH,IACjBtH,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA8M,GAAAjH,KAAAH,KAAMH,KACD5F,MAAQ,CACX0C,YAAY,GAHGmD,mFASjBE,KAAKH,MAAMpH,iBAAiB,iDAGV4H,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,SAAa5B,KAAKH,MAAM8B,SAASC,oCAKtDpB,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAK,WAAYD,oCAG9B,IAAAiB,EAAAzB,KACN,OACEtE,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAE/BL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAE1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa4B,MAAO,GAElBpF,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMqH,UAAQ,EAACC,UAAQ,GACrBnL,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACEzI,KAAK,OACL2J,QAAQ,EACRuB,QAAS,WAAMT,EAAKU,GAAG,UACvB7F,KAAK,gBAEPZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACEzI,KAAK,MACL2J,QAAQ,EACRuB,QAAS,WAAMT,EAAKU,GAAG,SACvB7F,KAAK,UAKXZ,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACkL,EAAA,OAAD,KACEpL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,KAC7CxL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW3D,iBAvDhClH,aAmFX4E,qBAfU,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAH,MAAe,CAEtCnE,MAAOmE,EAAKnE,MACZ+C,gBAAgBoB,EAAKpB,kBAGI,SAAA5C,GAAQ,OACjCsK,YACE,CACEzI,mBACA0I,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGboG,ICjGIxH,eAGJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAJ,IACjBE,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAsF,GAAAO,KAAAH,KAAMH,KACD5F,MAAQ,CACXmG,SAAQ,GAHON,+HAWCO,EAAWC,EAAWC,+BAoBvCC,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,oCAIxB,OAAGR,KAAK/F,MAAMmG,QAEV1E,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQC,QAAM,KAKhBjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACpBZ,KAAK,aACL4B,QAAS,cAAe8B,KAAKH,MAAM/G,KAAK9B,KACxC+J,UAAU,6CAvDE3E,aAgFnB4E,qBAbU,SAAAC,KAAGrG,KAAH,IAASrE,EAAT0K,EAAS1K,OAAQuC,EAAjBmI,EAAiBnI,KAAjB,MAA6B,CACpDvC,OAAQA,EAAOA,OACfuC,KAAKA,EAAKA,OAGe,SAAAlC,GAAQ,OACjCsK,YACE,CACEC,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbpB,IClFIyH,eAEJ,SAAAA,EAAYxH,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAqH,IACjBvH,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA+M,GAAAlH,KAAAH,KAAMH,KAGR5F,MAAQ,CACNmG,SAAQ,EACRmD,SAAQ,EACRC,OAAM,EACNjN,OAAQ,GACR+B,GAAI,GACJtB,KAAM,GACNgC,OAAQ,GACRC,MAAO,GACP/B,YAAa,GACbC,MAAO,IAdU2I,EAiBnB2D,aAAe,SAACC,EAADzC,GAAA,IAAMjK,EAANiK,EAAMjK,KAAMc,EAAZmJ,EAAYnJ,MAAZ,OAAwBgI,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBtD,EAAOc,KAjB5CgI,EAkBnB8D,iBAAmB,SAACF,GAClB5D,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBoJ,EAAEL,OAAOrM,KAAO0M,EAAEL,OAAOQ,MAAM,MAnB/B/D,EAsBnBgE,aAAe,WACbhE,EAAKwH,UAvBYxH,mFA2BjBE,KAAK0B,SAAS1B,KAAKH,MAAM/G,iDAGPuH,EAAWC,EAAWC,GAErCF,EAAUsB,SAASC,WAAa5B,KAAKH,MAAM8B,SAASC,UACrD5B,KAAK0B,SAAS1B,KAAKH,MAAM/G,uCAIrB,IAAA2I,EAAAzB,KACNA,KAAK0B,SAAS,CAACtB,SAAQ,EAAMmD,SAAQ,EAAOC,OAAM,IAClDxD,KAAKH,MAAM3G,WAAW8G,KAAK/F,MAAO+F,KAAKH,MAAMpJ,MAC3C,SAACsB,GACIA,IACDI,QAAQC,IAAI,YAAaL,GACzB0J,EAAKC,SAAS,CAAC6B,SAAQ,EAAMnD,SAAQ,MAKzC,SAAClI,GACCuJ,EAAKC,SAAS,CAAC6B,SAAQ,EAAOC,OAAM,EAAMpD,SAAQ,iCAIrDI,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,oCAGlB,IAAA+G,EAQFvH,KAAK/F,MALPjD,GAHIuQ,EAEJjP,GAFIiP,EAGJvQ,MACAgC,EAJIuO,EAIJvO,OACAC,EALIsO,EAKJtO,MACA/B,EANIqQ,EAMJrQ,YANIqQ,EAOJpQ,MAEF,OACEuE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC5BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASwJ,UAAQ,GACf9J,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACtBZ,KAAK,UACL4B,QAAS,aAAc8B,KAAKH,MAAM/G,KAAK9B,KACvC+J,UAAU,sBAIdrF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAEGgE,KAAK/F,MAAMsJ,QACV7H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEC,SAAO,EACP5I,OAAO,2BACPoB,QAAQ,8CACT,KAEF8B,KAAK/F,MAAMuJ,MACV9H,EAAAC,EAAAC,cAAC6J,GAAA,EAAD,CACEjC,OAAK,EACL1G,OAAO,uBACPoB,QAAQ,oCACT,KAEHxC,EAAAC,EAAAC,cAACmJ,GAAA,EAAD,CAAMa,SAAU5F,KAAK8D,aAAc1D,QAASJ,KAAK/F,MAAMmG,SAEvD1E,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,KACEtJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACIlD,YAAY,OACZhL,KAAK,OACLc,MAAOd,EACPmO,SAAUnF,KAAKyD,gBAIrB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,KACEtJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACIlD,YAAY,SACZhL,KAAK,SACLc,MAAOkB,EACPmM,SAAUnF,KAAKyD,gBAIrB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,KACEtJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACIlD,YAAY,QACZhL,KAAK,QACLc,MAAOmB,EACPkM,SAAUnF,KAAKyD,gBAIrB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,KACEtJ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACmJ,GAAA,EAAKkB,SAAN,CACIjE,YAAY,cACZhL,KAAK,cACLc,MAAOZ,EACPiO,SAAUnF,KAAKyD,gBAIrB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAY7F,OAAK,GACfzD,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAO5D,KAAK,OAAOhB,KAAK,QAAQmO,SAAUnF,KAAK4D,mBAG9C5D,KAAKH,MAAM/G,KAAK3B,MACfuE,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACsH,QAAQ,QACjB1H,EAAAC,EAAAC,cAAA,KAAGiB,KAAMmD,KAAKH,MAAM/G,KAAK3B,MAAOkM,OAAO,UACrC3H,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAK4C,KAAKH,MAAM/G,KAAK3B,MAAOgG,KAAK,SAASQ,SAAO,EAACgB,SAAO,MAGrE,MAGHjD,EAAAC,EAAAC,cAACmJ,GAAA,EAAKtH,OAAN,CAAaS,QAAQ,OAAO+D,SAAO,EAAC/E,QAAQ,QAAQC,KAAK,uBAzJxCf,aCYzBoL,ID2KSxG,kBAfU,SAAA8E,GAAA,IAAGlL,EAAHkL,EAAGlL,KAAMrE,EAATuP,EAASvP,OAAQuC,EAAjBgN,EAAiBhN,KAAjB,MAA6B,CACpDrC,MAAOmE,EAAKnE,MACZF,OAAQA,EAAOA,OACfuC,KAAMA,EAAKA,OAGc,SAAAlC,GAAQ,OACjCsK,YACE,CACEhI,aACAiI,WAAY,kBAAMV,eAAK,aAEzB7J,IAGWoK,CAGbqG,IC9KiB,SAACxH,GAClB,OACEnE,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKe,QAAQ,OACpBZ,KAAK,aACL4B,QAAS2B,EAAM7I,KACf+J,UAAWlB,EAAM3I,oBAU7BuQ,GAAkB,WACtB,OAAQ/L,EAAAC,EAAAC,cAAC8L,GAAD,CAAY1Q,KAAK,cAAcE,YAAY,kCAE/CyQ,GAAU,WACd,OAAQjM,EAAAC,EAAAC,cAAC8L,GAAD,CAAY1Q,KAAK,MAAME,YAAY,wCAEvC0Q,GAAc,WAClB,OAAQlM,EAAAC,EAAAC,cAAC8L,GAAD,CAAY1Q,KAAK,UAAUE,YAAY,gCAG3C2Q,eAEJ,SAAAA,EAAYhI,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAA6H,IACjB/H,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAuN,GAAA1H,KAAAH,KAAMH,KACD5F,MAAQ,CACXmG,SAAQ,EACRzD,YAAY,GAJGmD,mFAWjBE,KAAK7G,qDAGakH,EAAWC,EAAWC,GACrCF,EAAUsB,SAASC,SAAa5B,KAAKH,MAAM8B,SAASC,2CAKhD,IAAAH,EAAAzB,KACPA,KAAK0B,SAAS,CAACtB,SAAQ,IAEvBJ,KAAKH,MAAM1G,QAAQ,CAACb,GAAG0H,KAAKH,MAAMoE,MAAMC,OAAO5L,IAAK0H,KAAKH,MAAMpJ,MAAO,SAACiQ,GACrEjF,EAAK5B,MAAMxG,eAAeqN,GAC1BjF,EAAKC,SAAS,CAACtB,SAAQ,KAEzB,SAAClI,GACCC,QAAQC,IAAI,0BAA2BF,GACvCuJ,EAAKC,SAAS,CAACtB,SAAQ,IACvBqB,EAAK5B,MAAMhF,QAAQ8L,sCAYpBnG,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAK,SAAWT,KAAKH,MAAMoE,MAAMC,OAAO5L,GAAMkI,oCAG3D,IAAAqB,EAAA7B,KACN,OAAGA,KAAK/F,MAAMmG,QAEV1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,GACVP,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQC,QAAM,GAAd,qBAMNjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7BL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAE1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa4B,MAAO,GAElBpF,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMsH,UAAQ,GACZnL,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAK4C,KAAKH,MAAM/G,KAAK3B,MAC1BwH,SAAO,EACPhB,SAAO,EACPyB,MAAO,CACLjD,GAAI,IACJ+F,QAAS,WAAML,EAAKM,GAAG,cACvBzE,MAAO,QACPQ,QAAS8B,KAAKH,MAAM/G,KAAK9B,KAEzB2I,OAAQ,WAKdjE,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMsH,UAAQ,GAEZnL,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,YACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,KACvB7F,KAAK,sBAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,MACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,SACvB7F,KAAK,sBAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,cACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,iBACvB7F,KAAK,kBAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,UACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,aACvB7F,KAAK,aAETZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CACIzI,KAAK,WACL2J,QAAQ,EACRuB,QAAS,WAAML,EAAKM,GAAG,cACvB7F,KAAK,qBAIbZ,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa2B,WAAS,EAACC,MAAO,IAC1BpF,EAAAC,EAAAC,cAACkL,EAAA,OAAD,KACEpL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWa,KACzCpM,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,UAAWQ,KACrD/L,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWU,KAC7CjM,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWW,KACjDlM,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWlB,iBAxH7C3J,aAoJR4E,qBAjBU,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAMrE,EAAT0K,EAAS1K,OAAQuC,EAAjBmI,EAAiBnI,KAAjB,MAA6B,CACpDrC,MAAOmE,EAAKnE,MACZF,OAAQA,EAAOA,OACfsC,MAAOC,EAAKD,MACZC,KAAMA,EAAKA,OAGc,SAAAlC,GAAQ,OACjCsK,YACE,CACE/H,UACAE,iBACA8H,WAAY,kBAAMV,eAAK,WAEzB7J,IAGWoK,CAGb6G,cCnMIE,eAEJ,SAAAA,EAAYlI,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAA+H,IACjBjI,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAyN,GAAA5H,KAAAH,KAAMH,KAWR4D,aAAe,SAACC,EAADzC,GAAA,IAAMjK,EAANiK,EAAMjK,KAAMc,EAAZmJ,EAAYnJ,MAAZ,OAAwBgI,EAAK4B,SAALpH,OAAAqJ,GAAA,EAAArJ,CAAA,GAAiBtD,EAAOc,KAV7DgI,EAAK7F,MAAQ,CACXmG,SAAQ,EACR1G,SAAS,QACTC,SAAS,YACTlD,MAAO,MAGT0B,QAAQC,IAAI,UAAWhC,sBATN0J,kEAchBU,GACDR,KAAKH,MAAMhF,QAAQ4F,KAAKD,mCAGnB,IAAAiB,EAAAzB,KAELA,KAAK0B,SAAS,CAACtB,SAAQ,IAEvBJ,KAAKH,MAAMpG,MAAOuG,KAAK/F,MAAMP,SAAUsG,KAAK/F,MAAMN,SAAU,SAAC+L,GAC3DjE,EAAKC,SAAS,CAACtB,SAAQ,IACpBsF,EACDjE,EAAKU,GAAG,iBAERV,EAAKU,GAAG,wCAKN,IAAAN,EAAA7B,KAEN,OACEtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC/BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASgG,aAAW,EAAC/F,OAAK,GAC1BP,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAI2B,WAAS,GAC1BlF,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,KACExD,EAAAC,EAAAC,cAACmJ,GAAA,EAAD,CAAM3E,QAASJ,KAAK/F,MAAMmG,SACxB1E,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACE5I,KAAK,OACL0L,aAAa,OACb5I,MAAM,WACN4C,YAAY,WACZhL,KAAK,WACLmO,SAAUnF,KAAKyD,eAGjB/H,EAAAC,EAAAC,cAACmJ,GAAA,EAAKG,MAAN,CACE5I,KAAK,OACL0L,aAAa,OACb5I,MAAM,WACN4C,YAAY,WACZhK,KAAK,WACLhB,KAAK,WACLmO,SAAUnF,KAAKyD,eAGjB/H,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQS,QAAQ,QAAQ+D,SAAO,EAAC9C,OAAK,EAAChC,KAAK,QAAQnF,KAAK,SAASkK,QAAU,WAAOL,EAAKpI,aAI3FiC,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa+I,cAAc,UACzBvM,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQS,QAAQ,UAAU5B,KAAK,SAASa,KAAK,UAIjDzB,EAAAC,EAAAC,cAACsM,GAAA,EAAD,CAASrB,UAAQ,GAAjB,gBAvEkBzK,aAqIT4E,qBAdS,SAAA8E,GAAA,MAAe,CACrCrP,MADsBqP,EAAGlL,KACbnE,QAGa,SAAAG,GAAQ,OACjCsK,YACE,CACEzH,QACAM,UAGFnD,IAGWoK,CAGb+G,ICnJII,GAAW,CACf,CAACnR,KAAK,gBAAiBE,YAAY,iHAAkHwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,MACnL,CAACH,KAAK,6BAA2BE,YAAY,sEAAuEwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,MAClJ,CAACH,KAAK,eAAgBE,YAAY,oFAAqFwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,MACrJ,CAACH,KAAK,UAAWE,YAAY,iHAAkHwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,MAC7K,CAACH,KAAK,yBAA0BE,YAAY,iHAAkHwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,MAC5L,CAACH,KAAK,eAAgBE,YAAY,yHAA0HwG,MAAM,OAAQ8C,IAAI,KAAMrJ,MAAM,OA8F5KiR,oLAvFZ,OACE1M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAGEmB,KAAK,OACLkL,UAAQ,EACR3K,MAAM,SACNnB,UAAU,SACVT,MAAO,CAAEwM,UAAW,IAAKlF,QAAS,WAClCyD,UAAQ,GAGRnL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,QAAS,EAAG2B,WAAS,EAACqH,cAAc,OACtCvM,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa4B,MAAO,GAAIvE,UAAU,QAEhCb,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,GAAG,KACH+B,QAAQ,2BACRmK,UAAQ,EACRvM,MAAO,CACLyM,SAA2B,QAC3BC,WAAY,OACZC,aAAc,EACd1M,UAA8B,SAGlCL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,GAAG,KACH+B,QAAQ,4BACRmK,UAAQ,EACRvM,MAAO,CACLyM,SAA6B,QAE7BxM,UAA8B,WAIlCL,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEyM,SAAU,WAAtB,2LAIF7M,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQwE,SAAO,EAAC9E,KAAK,OAAO8F,GAAG,SAAS9G,GAAI2G,MAA5C,cAEEpH,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM7G,KAAK,kBAIb0E,EAAAC,EAAAC,cAACoD,GAAA,EAAKE,OAAN,CAAa4B,MAAO,GAEjBpF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOG,IAAI,+EAA+EO,SAAO,EAACC,IAAI,QAUnHlC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUwJ,UAAQ,GAChB9J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,SAAW0M,aAAa,QAErD/M,EAAAC,EAAAC,cAACa,EAAA,EAAKC,MAAN,CAAYC,YAAa,GACpBwL,GAASvF,IAAI,SAAC2C,EAAMmD,GAAP,OACZhN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEwI,IAAK,QAAQyD,EACb9L,QAAM,EACNC,KAAK,0BACLC,OAAQyI,EAAKvO,KAEb0G,MAAO6H,EAAK7H,MACZxG,YAAaqO,EAAKrO,YAClB4E,MAAO,CAACsH,QAAQ,sBA9EPhH,uBCFrBuM,eACF,SAAAA,EAAY9I,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAA2I,IACf7I,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAAqO,GAAAxI,KAAAH,KAAMH,KAIZsG,QAAU,CACR,CAAElB,IAAK,OAAQvC,KAAM,UAAWpG,KAAM,OAAU4F,QAAS,WAAM/J,QAAQC,IAAI,aAC3E,CAAE6M,IAAK,WAAYvC,KAAM,WAAYpG,KAAM,WAAa4F,QAAS,WAAM/J,QAAQC,IAAI,cACnF,CAAE6M,IAAK,WAAYvC,KAAM,WAAYpG,KAAM,WAAY4F,QAAS,WAC9DpC,EAAKD,MAAM9F,OAAO,WAChB5B,QAAQC,IAAI,0BAVG0H,EAgBrBkD,QACEtH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAO6B,QAAM,EAAC1B,IAAI,qGADpB,mBAfIjF,QAAQC,IAAI,UAAW0H,EAAKD,OAFbC,mFAuBnBE,KAAKH,MAAMrH,WAAWwH,KAAKH,MAAMpJ,kDAGf4J,EAAWC,EAAWC,GACrCF,EAAU9J,SAAWyJ,KAAKH,MAAMtJ,QAEjC4B,QAAQC,IAAI,yBAA0B4H,KAAKH,MAAMvJ,QAAS0J,KAAKH,MAAMtJ,yCAKvE,OACEmF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiN,SAAA,KACElN,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CAAMqB,WAAS,GACXlF,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAW3C,QAAM,GACbpB,EAAAC,EAAAC,cAACiN,GAAA,EAAD,CAAM5F,GAAG,IAAInH,MAAO,CAAC4B,MAAM,SAA3B,YAIJhC,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAWtD,GAAI2G,KAAMG,GAAG,iBAAxB,WAoBCjD,KAAKH,MAAMtJ,OACVmF,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAUvD,MAAI,EAAC7C,KAAM1C,KAAKH,MAAMtJ,OAAOS,MACrC0E,EAAAC,EAAAC,cAACkN,GAAA,EAASvJ,KAAV,KACI7D,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAI,WAAWjD,KAAKH,MAAMtJ,OAAO+B,GAAI6D,GAAI2G,KAAMJ,KAAK,YAAYpG,KAAK,sBACpFZ,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAI,WAAWjD,KAAKH,MAAMtJ,OAAO+B,GAAI,SAAU6D,GAAI2G,KAAMJ,KAAK,QAAQpG,KAAK,gBAC1FZ,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAI,WAAWjD,KAAKH,MAAMtJ,OAAO+B,GAAI,YAAa6D,GAAI2G,KAAMJ,KAAK,WAAWpG,KAAK,mBAChGZ,EAAAC,EAAAC,cAACkN,GAAA,EAASZ,QAAV,MACAxM,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAI,eAAgB9G,GAAI2G,KAAMJ,KAAK,iBAAiBpG,KAAK,UAG/E,KAGDZ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKA,KAAN,CAAWwJ,SAAS,SAEpBrN,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAUvD,MAAI,EACZvC,QAAShD,KAAKgD,QACdmD,QAASnG,KAAKmG,QACdS,SAAS,WACTtK,KAAM,iBAlFM0M,IAAM5M,WA2GjB4E,qBAfS,SAAAC,GAAA,IAAGrG,EAAHqG,EAAGrG,KAAMrE,EAAT0K,EAAS1K,OAAT,MAAuB,CAC7CE,MAAOmE,EAAKnE,MACZH,QAASC,EAAOD,QAChBC,OAAQA,EAAOA,SAGU,SAAAK,GAAQ,OACjCsK,YACE,CACEnH,SACAvB,cAEF5B,IAGWoK,CAGb2H,ICnEaM,eApDX,SAAAA,EAAYpJ,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAiJ,GACfnJ,EAAAxF,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA2O,GAAA9I,KAAAH,KAAMH,IACN1H,QAAQC,IAAI,UAAW0H,EAAKD,OAFbC,wEAOnB,OACEpE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiN,SAAA,KACElN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASqM,UAAQ,EAAC7C,UAAQ,EAAC9H,MAAM,SAAS5B,MAAO,CAACoN,OAAO,QACzDxN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,CACE7B,MAAM,SACNkD,WAAS,EAETyH,UATQ,EAWRc,WAXQ,EAYRhM,KAAK,QACLrB,MAAO,CAACsH,QAAQ,UAEhB1H,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAW3C,QAAM,GACbpB,EAAAC,EAAAC,cAACiN,GAAA,EAAD,CAAM5F,GAAG,IAAInH,MAAO,IAApB,YAKJJ,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,CAAWzI,KAAK,QAAQmF,GAAI2G,KAAOJ,KAAK,QAAQO,GAAG,cAEnDvH,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAUvD,MAAI,EAAC7C,KAAK,cAChBhH,EAAAC,EAAAC,cAACkN,GAAA,EAASvJ,KAAV,KACI7D,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAG,qBAAqB9G,GAAI2G,KAAMJ,KAAK,WACtDhH,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAG,oBAAoB9G,GAAI2G,KAAMJ,KAAK,UACrDhH,EAAAC,EAAAC,cAACkN,GAAA,EAASrJ,KAAV,CAAewD,GAAG,qBAAqB9G,GAAI2G,KAAMJ,KAAK,aAI9DhH,EAAAC,EAAAC,cAAC2D,GAAA,EAAKA,KAAN,CAAWwJ,SAAS,SAChBrN,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,KACI/D,EAAAC,EAAAC,cAACiN,GAAA,EAAD,CAAM5F,GAAG,UAAT,UAEJvH,EAAAC,EAAAC,cAAC2D,GAAA,EAAKE,KAAN,KACI/D,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQwF,GAAG,SAASvF,MAAM,QAA1B,uBA3CSsL,IAAM5M,WCkDlBgN,IClDWJ,IAAM5M,sBDE9B,SAAAgN,EAAYvJ,GAAQ,OAAAvF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAoJ,GAAA9O,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA8O,GAAAjJ,KAAAH,KACVH,0EAIR,OACEnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiN,SAAA,KACElN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACH,MAAO,CAACsH,QAAS,qBATb4F,IAAM5M,YEsB3BiN,eACJ,SAAAA,EAAYxJ,GAAQ,OAAAvF,OAAAyF,EAAA,EAAAzF,CAAA0F,KAAAqJ,GAAA/O,OAAA2F,EAAA,EAAA3F,CAAA0F,KAAA1F,OAAA4F,EAAA,EAAA5F,CAAA+O,GAAAlJ,KAAAH,KACZH,yEAIN1H,QAAQC,IAAI,2DAGsB,IAArB6O,EAAqBhG,EAArBgG,UAAcqC,EAAOhP,OAAAiP,EAAA,EAAAjP,CAAA2G,EAAA,eAClC,OACEvF,EAAAC,EAAAC,cAACkL,EAAA,MAADxM,OAAAC,OAAA,GACM+O,EADN,CAEEE,OAAQ,SAAA3J,GAAK,OACXA,EAAMrG,gBACJwP,IAAMpN,cAAcqL,EAAWpH,GAE/BnE,EAAAC,EAAAC,cAACkL,EAAA,SAAD,CAAU7D,GAAI,CAAErB,SAAU,SAAU3H,MAAO,CAACwP,KAAM5J,EAAM8B,wDAO9B,IAAtBsF,EAAsBnB,EAAtBmB,UAAcqC,EAAQhP,OAAAiP,EAAA,EAAAjP,CAAAwL,EAAA,eAClC,OACEpK,EAAAC,EAAAC,cAACkL,EAAA,MAADxM,OAAAC,OAAA,GACM+O,EADN,CAEEE,OAAQ,SAAA3J,GAAK,OACXA,EAAMrG,gBACJkC,EAAAC,EAAAC,cAACkL,EAAA,SAAD,CAAU7D,GAAI,CAAErB,SAAU,OAE1BoH,IAAMpN,cAAcqL,EAAWpH,wCASvC,OAAIG,KAAKH,MAAMrG,gBAEXkC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC3BL,EAAAC,EAAAC,cAAC8N,GAAD,MACDhO,EAAAC,EAAAC,cAACkL,EAAA,OAAD,KACEpL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxL,IACjCC,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,WAAcC,UAAWG,KACrC1L,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,cAAcC,UAAWR,KACrC/K,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,YAAaC,UAAWY,QAQ5CnM,EAAAC,EAAAC,cAAA,WACOF,EAAAC,EAAAC,cAAC+N,GAAD,MAEDjO,EAAAC,EAAAC,cAACkL,EAAA,OAAD,KACEpL,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWmB,KACrC1M,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,KAChBtL,EAAAC,EAAAC,cAACkL,EAAA,SAAD,CAAU7D,GAAG,WAGfvH,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,wBAChBtL,EAAAC,EAAAC,cAACkL,EAAA,SAAD,CAAU7D,GAAG,WAGfvH,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,SAASC,UAAWc,KAChCrM,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,oBAAoBC,UAAW5K,IAC3CX,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAW7I,KAClD1C,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWrI,KAClDlD,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOE,KAAK,YAAYC,UAAWxL,IACnCC,EAAAC,EAAAC,cAACkL,EAAA,MAAD,CAAOG,UAAWmB,MAGnB1M,EAAAC,EAAAC,cAACgO,GAAD,cA/EGxN,aAiHH4E,qBANU,SAAA6I,GAAA,IAAGjP,EAAHiP,EAAGjP,KAAH,MAAe,CACtCA,KAAMA,EACNnE,MAAOmE,EAAKnE,MACZ+C,gBAAgBoB,EAAKpB,kBAGRwH,CAGbqI,IC5IIhG,kBAASyG,SAASC,cAAc,UAEtCP,iBACE9N,EAAAC,EAAAC,cAACoO,EAAA,SAAD,CAAUC,MAAOA,GACfvO,EAAAC,EAAAC,cAACsO,EAAA,gBAAD,CAAiBrP,QAASA,GACxBa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuO,GAAD,SAIN9G","file":"static/js/main.a3dbbd7d.chunk.js","sourcesContent":["/**********************************************************************\n * CONTANTS\n ***********************************************************************/\nexport const STUDIO_ADD = 'STUDIO/ADD'\nexport const STUDIO_UPDATE = 'STUDIO/UPDATE'\nexport const STUDIOS_SET = 'STUDIOS/SET'\nexport const STUDIO_SET_CURRENT = 'STUDIO/SET_CURRENT'\nexport const STUDIO_REMOVE = 'STUDIO/REMOVE'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\n/**********************************************************************\n * REDUX \n ***********************************************************************/\n\nconst studioInitialState = { \n  studios:[],\n  studio:null\n}\n\nexport default (state = studioInitialState, action) => {\n  switch (action.type) {\n    case STUDIO_ADD:\n      return Object.assign({}, state, {\n        studios: [\n          ...state.studios,\n          action.studio\n        ]\n      })\n    case STUDIOS_SET:\n      return {\n        ...state,\n        studios: action.studios\n      }\n    case STUDIO_SET_CURRENT:\n        console.log('STUDIO_SET_CURRENT: ', action.studio)\n        return {\n          ...state,\n          studio: action.studio\n        }\n    case STUDIO_REMOVE:\n      console.log('STUDIO_REMOVE: ', action.studio)\n      return Object.assign({}, state, {\n        studios: [\n          ...state.studios.filter(row => row.id != action.studio.id)\n        ]\n      })\n    /*  \n    case STUDIO_UPDATE:\n        console.log('STUDIO_UPDATE: ', ...action.studios)\n        let studios  = ...state.studios\n        const key = Object.keys(studios).find(id => studios[id] === action.studio.id);\n        console.log('chave: ', key, studios[key])\n\n        studios.filter(row => row.id != action.studio.id)\n        return Object.assign({}, state, {\n          studios: state.studios\n        })\n        */\n    default:\n      return state\n  }\n}\n\n/**********************************************************************\n * ACTIONS\n ***********************************************************************/\n/**\n * Add Studio\n * @param {*} studio \n * @param {*} token \n */\nexport const addStudio = (studio, token, onSuccess, onError) => {\n  return dispatch => {\n\n    // Form Data\n    var formData = new FormData();\n    //formData.append('id', studio.id);\n    formData.append('name', studio.name);\n    formData.append('slug', studio.slug);\n    formData.append('description', studio.description);\n    if (studio.image) {\n      formData.append(`image`, studio.image); // File\n    }\n\n    return fetch(`${API_URL}/studio/`, {\n      method: 'post',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n      body: formData,\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        response.json().then(function(value){\n          onError(value)\n          return false;\n        })\n      }\n    }).then(function(data) {\n      if(data){\n        dispatch({\n          type: STUDIO_ADD,\n          studio: data\n        })\n        onSuccess(data)\n        return true\n      }\n      return false\n    })\n    .catch(function (err) {\n      console.log('Erro: ', err)\n      //onError(err)\n    })\n  }\n}\n\nexport const updateStudio = (studio, token, onSuccess, onError) => {\n  return dispatch => {\n\n    console.log('studio: ', studio)\n\n    // Form Data\n    var formData = new FormData();\n    formData.append('id', studio.id);\n    formData.append('name', studio.name);\n    formData.append('slug', studio.slug);\n    formData.append('description', studio.description);\n    if(studio.image ) {\n      console.log('Tipo da imagem: ', (typeof studio.image))\n      if(typeof studio.image === 'object'){\n        formData.append(`image`, studio.image); // File\n      }      \n    }\n\n    return fetch(`${API_URL}/studio/${studio.id}/`, {\n      method: 'put',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n      body: formData,\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        response.json().then(function(value){\n          onError(value)\n          return false;\n        })  \n      }\n    }).then(function(data) {\n      console.log('updateStudio: data: ', data)\n      if(data){\n        dispatch({\n          type: STUDIO_SET_CURRENT,\n          studio: data\n        })\n        /*\n        dispatch({\n          type: STUDIO_UPDATE,\n          studio: data\n        })\n        */\n        onSuccess(data)\n        return true\n      }\n    })\n    /*.catch(function (err) {\n\n      err.then(function(result) {\n          console.log('Erro 3', result['PromiseValue'])  \n        onError(result.value)\n      });\n      return false\n    })\n    */\n  }\n}\n\n\nexport const getStudio = (studio, token, onSuccess, onError) => {\n  return dispatch => {\n\n    return fetch(`${API_URL}/studio/${studio.id}/`, {\n      method: 'get',\n      headers: {\n        'Authorization': 'Token '+token\n      }\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        console.log('getStudio: Erro 1', response)\n        onError(response)\n        return false;\n      }\n    }).then(function(data) {\n      console.log('getStudio: data: ', data)\n      if(data){\n        /*\n        dispatch({\n          type: STUDIO_SET_CURRENT,\n          game: data\n        })\n        */\n        onSuccess(data)\n        return true\n      }\n    })\n    /*.catch(function (err) {\n\n      err.then(function(result) {\n          console.log('Erro 3', result['PromiseValue'])  \n        onError(result.value)\n      });\n      return false\n    })\n    */\n  }\n}\n\n/**\n * Get Studio List\n * @param {*} token \n */\nexport const listStudio = (token) => {\n  return dispatch => {\n    return fetch(`${API_URL}/studio/`, {\n      method: 'get',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }\n      return false;\n    }).then(function(data) {\n      dispatch({\n        type: STUDIOS_SET,\n        studios: data\n      })\n      return true\n    }).catch(function (err) {\n      return false\n    })\n  }\n}\n\n/**\n * Set Current Studio\n * @param {*} studio \n */\nexport const setCurrentStudio = (studio) => {\n  return dispatch => {\n      dispatch({\n        type: STUDIO_SET_CURRENT,\n        studio: studio\n      })\n  }\n}\n\n\n/**\n * Remove Studio\n * @param {*} token \n */\nexport const removeStudio = (studio, token) => {\n  return dispatch => {\n\n    return fetch(`${API_URL}/studio/${studio.id}`, {\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token '+token\n      },\n      /*\n      body: {\n        id: studio.id\n      },\n      */\n    }).then(function(response) {\n      if(response.ok){\n        console.log('removeStudio: ', response)\n        console.log('Removendo studio: ', studio)\n        dispatch({\n          type: STUDIO_REMOVE,\n          studio: studio\n        })\n        return true\n      }\n      return false;\n\n    }).catch(function (err) {\n      return false\n    })\n  }\n}\n","/**********************************************************************\n * CONTANTS\n ***********************************************************************/\nexport const GAME_ADD = 'GAME/ADD'\nexport const GAME_UPDATE = 'GAME/UPDATE'\nexport const GAMES_SET = 'GAMES/SET'\nexport const GAME_SET_CURRENT = 'GAME/SET_CURRENT'\nexport const GAME_REMOVE = 'GAME/REMOVE'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\n/**********************************************************************\n * REDUX \n ***********************************************************************/\n\nconst gameInitialState = { \n  games:[],\n  game:null\n}\n\nexport default (state = gameInitialState, action) => {\n  switch (action.type) {\n    case GAME_ADD:\n      return Object.assign({}, state, {\n        games: [\n          ...state.games,\n          action.game\n        ]\n      })\n    case GAMES_SET:\n      return {\n        ...state,\n        games: action.games\n      }\n    case GAME_SET_CURRENT:\n        console.log('GAME_SET_CURRENT: ', action.game)\n        return {\n          ...state,\n          game: action.game\n        }\n    case GAME_REMOVE:\n      console.log('GAME_REMOVE: ', action.game)\n      return Object.assign({}, state, {\n        games: [\n          ...state.games.filter(row => row.id != action.game.id)\n        ]\n      })\n    /*  \n    case GAME_UPDATE:\n        console.log('GAME_UPDATE: ', ...action.games)\n        let games  = ...state.games\n        const key = Object.keys(games).find(id => games[id] === action.game.id);\n        console.log('chave: ', key, games[key])\n\n        games.filter(row => row.id != action.game.id)\n        return Object.assign({}, state, {\n          games: state.games\n        })\n        */\n    default:\n      return state\n  }\n}\n\n\n\n/**********************************************************************\n * ACTIONS\n ***********************************************************************/\n/**\n * Add Game\n * @param {*} game \n * @param {*} token \n */\nexport const addGame = (game, token, onSuccess, onError) => {\n  return dispatch => {\n\n    // Form Data\n    var formData = new FormData();\n    //formData.append('id', game.id);\n    formData.append('studio', game.studio);\n    formData.append('name', game.name);\n    formData.append('resume', game.resume);\n    formData.append('genre', game.genre);\n    formData.append('description', game.description);\n    if(game.image ) {\n      if(typeof game.image === 'object'){\n        formData.append(`image`, game.image); // File\n      }      \n    }\n\n    return fetch(`${API_URL}/game/`, {\n      method: 'post',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n      body: formData,\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        response.json().then(function(value){\n          onError(value)\n          return false;\n        })        \n      }\n    }).then(function(data) {\n      if(data){\n        dispatch({\n          type: GAME_ADD,\n          game: data\n        })\n        onSuccess(data)\n        return true\n      }\n      return false\n    })\n    .catch(function (err) {\n      console.log('Erro: ', err)\n      //onError(err)\n    })\n  }\n}\n\nexport const updateGame = (game, token, onSuccess, onError) => {\n  return dispatch => {\n\n    console.log('game: ', game)\n\n    // Form Data\n    var formData = new FormData();\n    formData.append('id', game.id);\n    formData.append('studio', game.studio);\n    formData.append('name', game.name);\n    formData.append('resume', game.resume);\n    formData.append('genre', game.genre);\n    formData.append('description', game.description);\n    if(game.image ) {\n      if(typeof game.image === 'object'){\n        formData.append(`image`, game.image); // File\n      }      \n    }\n\n    return fetch(`${API_URL}/game/${game.id}/`, {\n      method: 'put',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n      body: formData,\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        response.json().then(function(value){\n          onError(value)\n          return false;\n        })  \n      }\n    }).then(function(data) {\n      console.log('updateGame: data: ', data)\n      if(data){\n        dispatch({\n          type: GAME_SET_CURRENT,\n          game: data\n        })\n        /*\n        dispatch({\n          type: GAME_UPDATE,\n          game: data\n        })\n        */\n        onSuccess(data)\n        return true\n      }\n    })\n    /*.catch(function (err) {\n\n      err.then(function(result) {\n          console.log('Erro 3', result['PromiseValue'])  \n        onError(result.value)\n      });\n      return false\n    })\n    */\n  }\n}\n\nexport const getGame = (game, token, onSuccess, onError) => {\n  return dispatch => {\n\n    return fetch(`${API_URL}/game/${game.id}/`, {\n      method: 'get',\n      headers: {\n        'Authorization': 'Token '+token\n      }\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }else{\n        console.log('getGame: Erro 1', response)\n        onError(response)\n        return false;\n      }\n    }).then(function(data) {\n      console.log('getGame: data: ', data)\n      if(data){\n        /*\n        dispatch({\n          type: GAME_SET_CURRENT,\n          game: data\n        })\n        */\n        onSuccess(data)\n        return true\n      }\n    })\n    /*.catch(function (err) {\n\n      err.then(function(result) {\n          console.log('Erro 3', result['PromiseValue'])  \n        onError(result.value)\n      });\n      return false\n    })\n    */\n  }\n}\n\n/**\n * Get Game List\n * @param {*} token \n */\nexport const listGame = (token, studio, onSuccess) => {\n  return dispatch => {\n    return fetch(`${API_URL}/game/?studio=${studio.id}`, {\n      method: 'get',\n      headers: {\n        'Authorization': 'Token '+token\n      },\n    }).then(function(response) {\n      if(response.ok){\n        return response.json();\n      }\n      return false;\n    }).then(function(data) {\n      dispatch({\n        type: GAMES_SET,\n        games: data\n      })\n      onSuccess(data)\n      return true\n    }).catch(function (err) {\n      return false\n    })\n  }\n}\n\n/**\n * Set Current Game\n * @param {*} game \n */\nexport const setCurrentGame = (game) => {\n  return dispatch => {\n      dispatch({\n        type: GAME_SET_CURRENT,\n        game: game\n      })\n  }\n}\n\n\n/**\n * Remove Game\n * @param {*} token \n */\nexport const removeGame = (game, token, onSuccess) => {\n  return dispatch => {\n\n    return fetch(`${API_URL}/game/${game.id}`, {\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token '+token\n      },\n      /*\n      body: {\n        id: game.id\n      },\n      */\n    }).then(function(response) {\n      if(response.ok){\n        dispatch({\n          type: GAME_REMOVE,\n          game: game\n        })\n        onSuccess()\n        return true\n      }\n      return false;\n\n    }).catch(function (err) {\n      return false\n    })\n  }\n}\n","export const USER_SET_TOKEN = 'USER/SET_TOKEN'\nexport const USER_UNSET_TOKEN = 'USER/UNSET_TOKEN'\n\nconst initialState = { \n  id: null,\n  isAuthenticated:false,\n  token: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SET_TOKEN:\n      console.log('SET_TOKEN: action: ', action)\n      return {\n        ...state,\n        token:action.token,\n        isAuthenticated:action.isAuthenticated,\n      }\n    case USER_UNSET_TOKEN:\n      console.log('UNSET_TOKEN:')\n      return {\n        ...state,\n        token:null,\n        isAuthenticated:false,\n      }\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password, callback) => {\n  return dispatch => {\n    return fetch(`${process.env.REACT_APP_API_URL}/api-token-auth/`, {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({\n        username:username,\n        password:password\n      })\n    }).then(function(response) {\n      console.log('Response: ', response)\n      if(response.ok){\n        return response.json();\n      }\n      return false;\n    }).then(function(data) {\n      console.log('Login token: ', data, data.token)\n      if(data && data.token){\n        dispatch({\n          type: USER_SET_TOKEN,\n          token: data.token,\n          isAuthenticated:true\n        })\n        callback(true)\n        return true\n      }else{\n        dispatch({\n          type: USER_UNSET_TOKEN\n        })\n        callback(false)\n        return false\n      }\n    }).catch(function (err) {\n      console.log('Login error: ', err)\n      callback(false)\n      return false\n    })\n  }\n}\n\nexport const logout = (callback) => {\n  return dispatch => {\n    dispatch({\n      type: USER_UNSET_TOKEN\n    })\n    callback(false)\n  }\n}\n","import { combineReducers } from 'redux'\nimport studio from './studio'\nimport game from './game'\nimport user from './user'\n\nexport default combineReducers({\n  studio,\n  game,\n  user\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './modules'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Image,\n  Segment,\n  Icon\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass About extends Component {\n\n  teste(){\n    console.log('Apoena testando')\n  }\n\n  render(){\n    return (\n      <div>\n        <Container style={{ marginTop: '3em' }}>\n\n\n\n          <Segment basic>\n            <Header as='h1'>About</Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n              ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n              magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n              ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n              quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n              arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n              Nullam dictum felis eu pede link mollis pretium. Integer tincidunt. Cras\n              dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.\n              Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.\n              Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n              viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet.\n              Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n              ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n              magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n              ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n              quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n              arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n              Nullam dictum felis eu pede link mollis pretium. Integer tincidunt. Cras\n              dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.\n              Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.\n              Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n              viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet.\n              Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi.\n            </p>\n          </Segment>    \n\n        </Container>\n      </div>\n    );\n\n  }\n }\n\n export default About\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Image,\n  Card,\n  Icon,\n  Feed,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass CardsView extends Component {\n\n  teste(){\n    console.log('Apoena testando')\n  }\n\n  render(){\n    return (\n      <div>\n      <Container style={{ marginTop: '3em' }}>\n\n          {/* Cards */}\n          <Header as='h1' icon textAlign='center'>\n              Cards\n            <Header.Subheader>\n              Exemplo de Cards\n            </Header.Subheader>\n          </Header>\n\n          <Card.Group itemsPerRow={4}>\n            <Card\n              raised  \n              href='#card-example-link-card'\n              header='Cartão Simples de Exemplo'\n              meta='Friend'\n              description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n            />\n\n            <Card\n              href='#card-example-link-card'\n              header='Cartão Simples de Exemplo'\n              meta='Friend'\n              description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n            />\n\n            <Card\n              href='#card-example-link-card'\n              header='Cartão Simples de Exemplo'\n              meta='Friend'\n              description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n            />\n\n            <Card\n              href='#card-example-link-card'\n              header='Cartão Simples de Exemplo'\n              meta='Friend'\n              description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n            />\n\n          </Card.Group >\n\n          <Card.Group itemsPerRow={4}>\n          <Card raised>\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\n                \n              />\n              <Card.Header>Steve Sanders</Card.Header>\n              <Card.Meta>Friends of Elliot</Card.Meta>\n              <Card.Description>\n                Steve wants to add you to the group <strong>best friends</strong>\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className='ui two buttons'>\n                <Button basic color='green'>\n                  Approve\n                </Button>\n                <Button basic color='red'>\n                  Decline\n                </Button>\n              </div>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src='https://react.semantic-ui.com/images/avatar/large/molly.png'\n              />\n              <Card.Header>Molly Thomas</Card.Header>\n              <Card.Meta>New User</Card.Meta>\n              <Card.Description>\n                Molly wants to add you to the group <strong>musicians</strong>\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className='ui two buttons'>\n                <Button basic color='green'>\n                  Approve\n                </Button>\n                <Button basic color='red'>\n                  Decline\n                </Button>\n              </div>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\n              />\n              <Card.Header>Jenny Lawrence</Card.Header>\n              <Card.Meta>New User</Card.Meta>\n              <Card.Description>\n                Jenny requested permission to view your contact details\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className='ui two buttons'>\n                <Button basic color='green'>\n                  Approve\n                </Button>\n                <Button basic color='red'>\n                  Decline\n                </Button>\n              </div>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\n              />\n              <Card.Header>Jenny Lawrence</Card.Header>\n              <Card.Meta>New User</Card.Meta>\n              <Card.Description>\n                Jenny requested permission to view your contact details\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className='ui two buttons'>\n                <Button basic color='green'>\n                  Approve\n                </Button>\n                <Button basic color='red'>\n                  Decline\n                </Button>\n              </div>\n            </Card.Content>\n          </Card>\n          \n          </Card.Group>\n\n      {/* Outros cards */}\n          \n      <Card.Group itemsPerRow={4}>\n          <Card raised>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/daniel.jpg' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Nome do Jogo</Card.Header>\n            <Card.Meta>Cadastrado em 12/12/2018</Card.Meta>\n            <Card.Description>\n              Essa seria uma descrição do jogo\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='download' />\n              10 Donwloads\n            </a>\n          </Card.Content>\n        </Card>\n\n        <Card>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Nome do Jogo</Card.Header>\n            <Card.Meta>Cadastrado em 12/12/2018</Card.Meta>\n            <Card.Description>\n              Essa seria uma descrição do jogo\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='download' />\n              10 Donwloads\n            </a>\n          </Card.Content>\n        </Card>\n\n        <Card>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/molly.png' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Nome do Jogo</Card.Header>\n            <Card.Meta>Cadastrado em 12/12/2018</Card.Meta>\n            <Card.Description>\n              Essa seria uma descrição do jogo\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='download' />\n              10 Donwloads\n            </a>\n          </Card.Content>\n        </Card>\n\n        <Card>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/elliot.jpg' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Nome do Jogo</Card.Header>\n            <Card.Meta>Cadastrado em 12/12/2018</Card.Meta>\n            <Card.Description>\n              Essa seria uma descrição do jogo\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='download' />\n              10 Donwloads\n            </a>\n          </Card.Content>\n        </Card>\n\n        </Card.Group>\n\n\n        <Card.Group itemsPerRow={3}>\n\n        <Card raised>\n          <Card.Content>\n            <Card.Header>Outro Exemplo</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Feed>\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='1 day ago' />\n                  <Feed.Summary>\n                    You added <a>Jenny Hess</a> to your <a>coworker</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/molly.png' />\n                <Feed.Content>\n                  <Feed.Date content='3 days ago' />\n                  <Feed.Summary>\n                    You added <a>Molly Malone</a> as a friend.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='4 days ago' />\n                  <Feed.Summary>\n                    You added <a>Elliot Baker</a> to your <a>musicians</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n          </Card.Content>\n        </Card>\n\n\n        <Card>\n          <Card.Content>\n            <Card.Header>Outro Exemplo</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Feed>\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='1 day ago' />\n                  <Feed.Summary>\n                    You added <a>Jenny Hess</a> to your <a>coworker</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/molly.png' />\n                <Feed.Content>\n                  <Feed.Date content='3 days ago' />\n                  <Feed.Summary>\n                    You added <a>Molly Malone</a> as a friend.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='4 days ago' />\n                  <Feed.Summary>\n                    You added <a>Elliot Baker</a> to your <a>musicians</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n          </Card.Content>\n        </Card>\n\n        <Card>\n          <Card.Content>\n            <Card.Header>Outro Exemplo</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Feed>\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='1 day ago' />\n                  <Feed.Summary>\n                    You added <a>Jenny Hess</a> to your <a>coworker</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/molly.png' />\n                <Feed.Content>\n                  <Feed.Date content='3 days ago' />\n                  <Feed.Summary>\n                    You added <a>Molly Malone</a> as a friend.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                <Feed.Content>\n                  <Feed.Date content='4 days ago' />\n                  <Feed.Summary>\n                    You added <a>Elliot Baker</a> to your <a>musicians</a> group.\n                  </Feed.Summary>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n          </Card.Content>\n        </Card>\n\n\n        </Card.Group>  \n\n\n      </Container>\n      </div>\n    );\n\n  }\n }\n\n export default CardsView\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Image,\n  Table,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass TablesView extends Component {\n\n  teste(){\n    console.log('Apoena testando')\n  }\n\n  render(){\n    return (\n      <div>\n      <Container style={{ marginTop: '3em' }}>\n\n        <Header as='h1' icon textAlign='center'>\n            Tables\n          <Header.Subheader>\n            Tables examples\n          </Header.Subheader>\n        </Header>\n\n        <Table collapsing>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Id</Table.HeaderCell>\n              <Table.HeaderCell>Avatar</Table.HeaderCell>\n              <Table.HeaderCell>Nome</Table.HeaderCell>\n              <Table.HeaderCell>Descrição</Table.HeaderCell>\n              <Table.HeaderCell>Gẽnero</Table.HeaderCell>\n              <Table.HeaderCell>Ação</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>01</Table.Cell>\n              <Table.Cell>\n\n                <Header as='h4' image>\n                  <Image src='https://react.semantic-ui.com/images/avatar/small/lena.png' rounded size='big' />\n                  <Header.Content>\n                    Jogo 1\n                    <Header.Subheader>Descrição jogo 1</Header.Subheader>\n                  </Header.Content>\n                </Header>\n\n              </Table.Cell>\n              <Table.Cell>Jogo 1</Table.Cell>\n              <Table.Cell>Descrição</Table.Cell>\n              <Table.Cell>Arcade</Table.Cell>\n              <Table.Cell><Button basic>Editar</Button></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n            <Table.Cell>01</Table.Cell>\n              <Table.Cell>\n\n                <Header as='h4' image>\n                  <Image src='https://react.semantic-ui.com/images/avatar/small/matthew.png' rounded size='mini' />\n                  <Header.Content>\n                    Jogo 2\n                    <Header.Subheader>Descrição do Jogo 2</Header.Subheader>\n                  </Header.Content>\n                </Header>\n                \n              </Table.Cell>\n              <Table.Cell>Jogo 1</Table.Cell>\n              <Table.Cell>Descrição</Table.Cell>\n              <Table.Cell>RPG</Table.Cell>\n              <Table.Cell><Button basic>Editar</Button></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n            <Table.Cell>01</Table.Cell>\n            <Table.Cell>\n\n              <Header as='h4' image>\n                <Image src='https://react.semantic-ui.com/images/avatar/small/lena.png' rounded size='mini' />\n                <Header.Content>\n                  Jogo 3\n                  <Header.Subheader>Teste de Descrição</Header.Subheader>\n                </Header.Content>\n              </Header>\n\n              </Table.Cell>\n              <Table.Cell>Jogo 1</Table.Cell>\n              <Table.Cell>Descrição</Table.Cell>\n              <Table.Cell>Arcade</Table.Cell>\n              <Table.Cell><Button basic>Editar</Button></Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n      </Container>\n      </div>\n    );\n\n  }\n }\n\n export default TablesView\n","import React, {Component} from 'react';\nimport {\n  Container,\n  Grid,\n  Header,\n  Image,\n  Menu,\n  Segment,\n  Icon,\n  Label\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass LabelsView extends Component {\n\n  teste(){\n    console.log('Apoena testando')\n  }\n\n  render(){\n    return (\n      <div>\n      <Container style={{ marginTop: '3em' }}>\n\n        <Header as='h1' icon textAlign='center'>\n            Labels\n          <Header.Subheader>\n            Labels examples\n          </Header.Subheader>\n        </Header>\n\n        <br />\n\n        <Label as='a' alt='Descrição'>\n          <Image avatar spaced='right' src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' alt='Descrição'/>\n          Elliot\n        </Label>\n        <Label as='a' alt='Descrição'>\n          <img src='https://react.semantic-ui.com/images/avatar/small/stevie.jpg' alt='Descrição' />\n          Stevie\n        </Label>\n\n        <br />\n        <br />\n\n        <Grid columns={3}>\n        <Grid.Column>\n          <Image\n            fluid\n            label={{ as: 'a', corner: 'left', icon: 'heart' }}\n            src='https://react.semantic-ui.com/images/wireframe/image.png'\n            alt='Descrição'\n          />\n        </Grid.Column>\n\n        <Grid.Column>\n          <Image\n            fluid\n            label={{ as: 'a', corner: 'left',  icon: 'heart' }}\n            src='https://react.semantic-ui.com/images/wireframe/image.png'\n            alt='Descrição'\n          />\n        </Grid.Column>\n\n        <Grid.Column>\n          <Image\n            fluid\n            label={{ as: 'a', color: 'red', corner: 'right', icon: 'save' }}\n            src='https://react.semantic-ui.com/images/wireframe/image.png'\n            alt='Descrição'\n          />\n        </Grid.Column>\n        </Grid>\n\n        <br />\n\n        <div>\n        <Label as='a' color='blue' image alt='Descrição'>\n          <img src='https://react.semantic-ui.com/images/avatar/small/veronika.jpg' alt='Descrição daImagem' />\n          Veronika\n          <Label.Detail>Friend</Label.Detail>\n        </Label>\n        <Label as='a' color='teal' image alt='Descrição'>\n          <img src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' alt='Descrição daImagem' />\n          Veronika\n          <Label.Detail>Friend</Label.Detail>\n        </Label>\n        <Label as='a' color='yellow' image>\n          <img src='https://react.semantic-ui.com/images/avatar/small/christian.jpg' alt='Descrição daImagem' />\n          Helen\n          <Label.Detail>Co-worker</Label.Detail>\n        </Label>\n        </div>\n\n        <br />\n        <br />\n\n        <Menu compact>\n        <Menu.Item as='a'>\n          <Icon name='mail' /> Messages\n          <Label color='red' floating>\n            22\n          </Label>\n        </Menu.Item>\n        <Menu.Item as='a'>\n          <Icon name='users' /> Friends\n          <Label color='teal' floating>\n            22\n          </Label>\n        </Menu.Item>\n        </Menu>\n\n        <br />\n        <br />\n\n        <Grid columns={2}>\n        <Grid.Column>\n          <Segment raised>\n            <Label as='a' color='red' ribbon>\n              Overview\n            </Label>\n            <span>Account Details</span>\n\n            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' alt='Descrição daImagem' />\n\n            <Label as='a' color='blue' ribbon>\n              Community\n            </Label>\n            <span>User Reviews</span>\n\n            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' alt='Descrição daImagem' />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Label as='a' color='orange' ribbon='right'>\n              Specs\n            </Label>\n            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' alt='Descrição daImagem' />\n\n            <Label as='a' color='teal' ribbon='right'>\n              Reviews\n            </Label>\n            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' alt='Descrição daImagem' />\n          </Segment>\n        </Grid.Column>\n        </Grid>\n\n      </Container>\n      </div>\n    );\n\n  }\n }\n\n export default LabelsView\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Loader\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n/*\nimport {\n} from '../../modules/games'\n*/\n\nclass StudioDashboardView extends Component {\n\n  // TODO: remover esse loading, deixar somente na index\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false\n    };\n  }\n\n  componentDidMount(){\n    //this.getStudio()\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    /*\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      this.getStudio()\n    }\n    */\n  }\n\n  /*\n  getStudio(){\n    this.setState({loading:true})  \n    let studio = this.props.studios.filter(row => row.id == this.props.match.params.id)\n    setTimeout(() => {\n      this.setState({studio: studio[0] , loading:false})  \n      return true\n    }, 10);\n    \n  }\n  */\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n  render(){\n    if(this.state.loading){\n      return(\n        <Segment>\n          <Loader active />\n        </Segment>\n      )\n    }else{\n      return (\n        <div>\n          <Grid columns={1}  stackable>\n            <Grid.Column stretched width={16}>\n                <Segment>\n                  <Header as='h3' floated='left'\n                      icon='chart line'\n                      content={'Dashboard: '+ this.props.studio.name}\n                      subheader='See statistics for your Studio'\n                    />            \n                </Segment>\n              </Grid.Column>\n            </Grid>\n        </div>\n      )\n    }\n  }\n }\n\n const mapStateToProps = ({ user, studio }) => ({\n  studio: studio.studio\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudioDashboardView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Card,\n  Segment,\n  Loader,\n  Popup,\n  Icon\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Link, Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  setCurrentGame,\n  listGame,\n  addGame,\n  removeGame\n} from '../../modules/game'\nimport { setTimeout } from 'core-js';\n\nconst gamesTempAdd = [\n  { name: \"Game Name 1\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://www.mmotube.net/wp-content/uploads/2017/02/Preparing-For-Plays-SkySaga.png' },\n  { name: \"Game Name 2\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://i.ytimg.com/vi/Xdes4VYvmlI/maxresdefault.jpg'  },\n  { name: \"Game Name 3\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQEJ920hatZfWjxhbJ7BqV5TupEewz368J-4cQbJnyR1FvXY17j'  },\n  { name: \"Game Name 4\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://www.selectgame.com.br/wp-content/uploads/2012/12/The-Legend-of-Heroes-Trails-in-the-Sky-Wallpaper.jpg'  },\n  { name: \"Game Name 5\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://s2.glbimg.com/UDZ7zPZiiIgpNk4Frwq1OBNL33Y=/0x0:592x370/984x0/smart/filters:strip_icc()/s.glbimg.com/po/tt2/f/original/2013/05/20/c5.jpg'  },\n  { name: \"Game Name 6\", date:'12/12/2018', resume: 'Essa seria uma pequena descrição do jogo. Definida no campo Resume', downloads: \"1.500\", image:'https://fiverr-res.cloudinary.com/t_mobile_web_2,q_auto,f_auto/gigs/125670607/original/b9d2b7682aaf776d570f8396ecc463eb10b2ba96.jpg'  }\n];\n\nclass StudioGamesView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemsPerRow:3,\n      loading:false,\n      loading2:false\n    };\n  }\n\n  componentDidMount(){\n    //this.props.setGames( gamesTemp[(Math.floor(Math.random() * gamesTemp.length))] )  \n    this.setState({loading:true})\n    this.props.listGame(this.props.token, this.props.studio, ()=>{\n      this.setState({loading:false})\n    })\n    this.props.setCurrentGame(null)\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      // Toda vez\n    }\n  }\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n  removeGame(game){\n    this.setState({loading2:true})\n    setTimeout(() => {\n      this.props.removeGame(game, this.props.token, ()=>{this.setState({loading2:false})})  \n    }, 150);\n    \n  }\n\n  render(){\n    if(this.state.loading){\n      return(\n        <Segment>\n          <Loader active />\n        </Segment>\n      )\n    }else{\n\n      \n      if(this.props.games.length===0){\n        return(\n            <Segment placeholder>\n            <Header icon>\n              <Icon name='game' />\n                You have no game. Add and start managing the resources of your games.\n            </Header>\n            <Button primary onClick={()=>{ this.go(`/studio/${this.props.studio.id}/game-add`) }} >Add Game</Button>\n          </Segment>\n        )\n      }else{\n        return (\n          <div>\n            <Grid columns={1}  stackable>\n              <Grid.Column stretched width={16}>\n                <Segment>\n                  <Header as='h3' floated='left'\n                          icon='gamepad'\n                          content={'Games'}\n                          subheader='Manage your Games'\n                  />\n\n\n                  <Button\n                    onClick={ ()=> {\n                      let tempGame = gamesTempAdd[(Math.floor(Math.random() * 5))]\n  \n                      tempGame.id = null\n                      tempGame.studio = this.props.studio.url\n                      tempGame.genre = 'ARCADE'\n                      tempGame.Image = null\n  \n                      this.props.addGame( tempGame, this.props.token, ()=>{ console.log('Game Adicionado')}, ()=>{console.log('Erro ao Adicionar Game ')} )}\n                    }\n                    floated='right'\n                    //size=\"mini\"\n                    color='blue'\n                    content='Add New MOc'\n                    icon='add'\n                    labelPosition='left'\n                  />\n\n\n                    <Button\n                    onClick={()=>{ this.go(`/studio/${this.props.studio.id}/game-add`) }}\n                    floated='right'\n                    //size=\"mini\"\n                    color='green'\n                    content='Add New'\n                    icon='add'\n                    labelPosition='left'\n                    />\n\n\n  \n                  <Button.Group floated='right' >\n                    <Button onClick={()=>{this.setState({itemsPerRow:2})}}>2</Button>\n                    <Button.Or text='/' />\n                    <Button onClick={()=>{this.setState({itemsPerRow:3})}}>3</Button>\n                  </Button.Group>\n                  \n                </Segment>\n  \n                <Card.Group itemsPerRow={this.state.itemsPerRow} doubling stackable>\n                    {/* GAME LIST */}\n                    {this.props.games.map((game, index) => (\n                      <Card\n                        loading={this.state.loading2}\n                        raised \n                        image={game.image}\n                        header={game.name}\n                        //meta='Friend'\n                        //description={game.resume}\n                        meta={game.resume}\n                        as={Link}\n                        //to={`/game/${game.id}`}\n                        extra={(\n                          <Button.Group basic size='medium' floated='right'>\n                            <Popup trigger={ <Button color='red' icon='trash alternate' onClick={()=>{this.removeGame(game) } } />} content='Remove'/>\n                            <Popup trigger={ <Button icon='settings' as={Link} to={`/game/${game.id}/settings`} />}  content='Settings'/>\n                            <Popup trigger={ <Button icon='edit' as={Link} to={`/game/${game.id}`} />}  content='Edit'/>\n                          </Button.Group>\n                        )}\n                      />\n                    ))}\n                    {/* GAME LIST */}\n  \n                  </Card.Group>\n                </Grid.Column>\n              </Grid>\n          </div>\n        );\n      }\n    }\n  }\n }\n\n const mapStateToProps = ({ user, studio, game }) => ({\n  token: user.token,\n  studio: studio.studio,\n  games: game.games\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      setCurrentGame,\n      listGame,\n      addGame,\n      removeGame\n      //changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudioGamesView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Message,\n  Form,\n  Segment,\n  Divider\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n\nimport {\n  addStudio,\n  updateStudio\n} from '../../modules/studio'\n\n// Campos\nimport campos from './fields.json'\n\n// Exibe Imagem\nconst ImgCurrent = (props)=>{\n    return(\n      props.element.image?\n        <p style={{padding:'1em'}}>\n          <a href={props.element.image} target='_blank'>\n            <Image src={props.element.image} size='medium' wrapped rounded />\n          </a>\n        </p>\n      :null\n    )\n}   \n\n\nclass StudioFormView extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = { \n    loading:false, \n    message:false,\n    error:false,\n    id: '', \n    name: '', \n    slug: '', \n    description: '', \n    image: ''\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n  handleChangeFile = (e) => {\n    this.setState({ [e.target.name]: e.target.files[0] })\n  }\n\n  handleSubmit = () => {\n    this.state.id?this.update():this.add()\n  }\n\n  componentDidMount(){\n    console.log('componentDidMount: ', this.props.match.params)\n    if(this.props.match.params.id){\n      this.setState(this.props.studio)\n    }\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      if(this.state.id){\n        //this.setState(this.props.studio)\n      }\n      \n    }\n  }\n\n  add(){\n    this.setState({loading:true, message:false, error:false})\n    this.props.addStudio(this.state, this.props.token, \n      (data)=>{\n        if(data){\n          console.log('Studio Cadastrado: ', data)\n          this.setState({message:true, loading:false})\n          this.go('/studios/list')\n          this.reset()\n        }\n      }, \n      (err)=>{\n        this.setState({message:false, error:err, loading:false})\n      })\n  }\n\n  update(){\n    this.setState({loading:true, message:false, error:false})\n    this.props.updateStudio(this.state, this.props.token, \n      (data)=>{\n        if(data){\n          console.log('Studio Atualizado: ', data)\n          this.setState({message:true, loading:false})\n        }\n      }, \n      (err)=>{\n        this.setState({message:false, error:err, loading:false})\n      })\n  }\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n /**************************************************************\n   * TODO:  Mover para arquivo centralizado\n   **************************************************************/\n  montaCampos(){\n    let obj = campos.POST\n    let _campos  = []\n    let that = this\n    Object.keys(obj).forEach(function(index){\n      let temp = obj[index]\n      temp.name = index\n      _campos.push(temp)\n    })\n    return _campos.map( (field, index)=>{\n      return that.campo(field)\n    })\n  }\n\n  campo(field){\n    if(!['uuid','id','url','created_at'].includes(field.name) ){\n      switch (field.type) {\n        case 'slug':\n        case 'string':\n            return(\n              <Form.Field key={field.name}>\n              <label>{field.label}</label>\n              <Form.Input\n                  placeholder={field.label}\n                  name={field.name}\n                  value={this.state[field.name]}\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            )\n          break;\n        case 'image upload':            \n            return(\n              <Form.Field key={field.name}>\n                <label>{field.name}</label>\n                <input type=\"file\" name={field.name} onChange={this.handleChangeFile} />\n                {this.state.id?<ImgCurrent element={this.props.studio} />:null}\n              </Form.Field>\n            )\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  erros(){\n    let obj = this.state.error\n    let _erros  = []\n    Object.keys(obj).forEach(function(index){\n      let temp = {name: index, msgs: obj[index][0]}\n      _erros.push(temp)\n    })\n    return _erros.map( (item, index)=>(\n      <p> - {item.name}: {item.msgs}</p>\n    ))\n  }\n  /**************************************************************\n   * /Mover para arquivo centralizado\n   **************************************************************/\n\n  render(){\n    return (\n      <div>\n       <Container>\n        <Grid columns={1}  stackable>\n          <Grid.Column stretched width={16}>\n\n            <Segment attached>\n              <Header as='h3' floated='left'\n                icon='setting'\n                content={'Studio'}\n                subheader='Manage your Studio'\n              />\n            </Segment>\n\n            <Segment>\n\n              {this.state.message? \n                <Message\n                  success\n                  header='Studio successfully saved!'\n                  content='Select studio from the list to manage it.'/>\n                :null}\n\n              {this.state.error? \n              <Message\n                error\n                header='Error adding studio!'\n                //content='Check the fields and try again.'\n                content={this.erros()}\n                />\n              :null\n             }\n\n              <Form onSubmit={this.handleSubmit} loading={this.state.loading}>\n\n              {this.montaCampos()}  \n\n              {/*\n              <Form.Field>\n                <label>Name</label>\n                <Form.Input\n                    placeholder='Name'\n                    name='name'\n                    value={name}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n              <Form.Field>\n                <label>Slug</label>\n                <Form.Input\n                    placeholder='Slug'\n                    name='slug'\n                    value={slug}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n              <Form.Field>\n                <label>Description</label>\n                <Form.TextArea\n                    placeholder='description'\n                    name='description'\n                    value={description}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n\n              <Form.Field fluid>\n                <label>Image</label>\n                <input type=\"file\" name=\"image\" onChange={this.handleChangeFile} />\n\n                  {this.props.studio.image?\n                    <p style={{padding:'1em'}}>\n                      <a href={this.props.studio.image} target='_blank'>\n                        <Image src={this.props.studio.image} size='medium' wrapped rounded />\n                      </a>\n                    </p>\n                  :null}\n              </Form.Field>\n                  */}\n              <Form.Button content='Save' primary floated='right' size='large' />\n\n              </Form>\n\n              </Segment>\n\n            </Grid.Column>\n          </Grid>\n        </Container>   \n      </div>\n    );\n\n  }\n }\n\n const mapStateToProps = ({ user, studio }) => ({\n  token: user.token, \n  studio: studio.studio\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addStudio,\n      updateStudio,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudioFormView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Message,\n  Form,\n  Select,\n  TextArea,\n  Segment,\n  Divider\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n\nimport {\n  addGame,\n  updateGame\n} from '../../modules/game'\n\n// Campos\nimport campos from './fields.json'\n\n// Exibe Imagem\nconst ImgCurrent = (props)=>{\n    return(\n      props.element.image?\n        <p style={{padding:'1em'}}>\n          <a href={props.element.image} target='_blank'>\n            <Image src={props.element.image} size='medium' wrapped rounded />\n          </a>\n        </p>\n      :null\n    )\n}   \n\nclass GameFormView extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = { \n    loading:false, \n    message:false,\n    error:false,\n    studio:'',\n    id: '', \n    name: '', \n    resume: '', \n    genre: '', \n    description: '', \n    image: ''\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n  handleChangeFile = (e) => {\n    this.setState({ [e.target.name]: e.target.files[0] })\n  }\n\n  handleSubmit = () => {\n    this.state.id?this.update():this.add()\n  }\n\n  componentDidMount(){\n    console.log('componentDidMount: ', this.props.match.params)\n    this.setState({studio:this.props.studio.url})\n\n    if(this.props.match.params.id){\n      this.setState(this.props.game)\n    }\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      if(this.state.id){\n        this.setState(this.props.game)\n      }\n      \n    }\n  }\n\n  add(){\n    this.setState({loading:true, message:false, error:false})\n    this.props.addGame(this.state, this.props.token, \n      (data)=>{\n        if(data){\n          console.log(data)\n          this.setState({message:true, loading:false})\n          this.go(`/studio/${this.props.studio.id}/games`)\n          //this.reset()\n        }\n      }, \n      (err)=>{\n        this.setState({message:false, error:err, loading:false})\n      })\n  }\n\n  update(){\n    this.setState({loading:true, message:false, error:false})\n    this.props.updateGame(this.state, this.props.token, \n      (data)=>{\n        if(data){\n          this.setState({message:true, loading:false})\n        }\n      }, \n      (err)=>{\n        this.setState({message:false, error:err, loading:false})\n      })\n  }\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n /**************************************************************\n   * TODO:  Mover para arquivo centralizado\n   **************************************************************/\n  montaCampos(){\n    let obj = campos.POST\n    let _campos  = []\n    let that = this\n    Object.keys(obj).forEach(function(index){\n      let temp = obj[index]\n      temp.name = index\n      _campos.push(temp)\n    })\n    return _campos.map( (field, index)=>{\n      return that.campo(field)\n    })\n  }\n\n  campo(field){\n    if(!['uuid','id','url','created_at'].includes(field.name) ){\n      switch (field.type) {\n        case 'slug':\n        case 'string':\n          return(\n            <Form.Field key={field.name}>\n            <label>{field.label}</label>\n            \n            {field.max_length?\n              <Form.Input\n                placeholder={field.label}\n                name={field.name}\n                value={this.state[field.name]}\n                onChange={this.handleChange}\n              />\n              :\n              <Form.TextArea \n                placeholder={field.label}\n                name={field.name}\n                value={this.state[field.name]}\n                onChange={this.handleChange}\n              />\n              }\n            </Form.Field>\n          )\n          break;\n        case 'choice': \n          return(\n            <Form.Field key={field.name}>\n            <label>{field.label}</label>\n            <Select \n              placeholder={field.label} \n              name={field.name}\n              options={this.choicesToSelect(field.choices)} \n              value={this.state[field.name]}\n              onChange={this.handleChange}\n              />\n            </Form.Field>\n          )\n          break;\n        case 'image upload':            \n            return(\n              <Form.Field key={field.name}>\n                <label>{field.name}</label>\n                <input type=\"file\" name={field.name} onChange={this.handleChangeFile} />\n                {this.state.id?<ImgCurrent element={this.props.game} />:null}\n              </Form.Field>\n            )\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  choicesToSelect(choices){\n    let select = [];\n    choices.map((item)=>{\n      select.push(\n        {\n          key: item.value,\n          value:item.value,\n          text:item.display_name\n        }\n      )\n    })\n    return select\n  }\n\n  erros(){\n    let obj = this.state.error\n    let _erros  = []\n    Object.keys(obj).forEach(function(index){\n      let temp = {name: index, msgs: obj[index][0]}\n      _erros.push(temp)\n    })\n    return _erros.map( (item, index)=>(\n      <p> - {item.name}: {item.msgs}</p>\n    ))\n  }\n  /**************************************************************\n   * /Mover para arquivo centralizado\n   **************************************************************/\n\n  render(){\n    return (\n      <div>\n       <Container>\n        <Grid columns={1}  stackable>\n          <Grid.Column stretched width={16}>\n            <Segment attached>\n              <Header as='h3' floated='left'\n                icon='setting'\n                content={'Game'}\n                subheader='Manage your Game'\n              />\n            </Segment>\n\n            <Segment>\n              {this.state.message? \n                <Message\n                  success\n                  header='Game successfully saved!'\n                  content='Select game from the list to manage it.'/>\n                :null}\n              {this.state.error? \n              <Message\n                error\n                header='Error adding game!'\n                //content='Check the fields and try again.'\n                content={this.erros()}\n                />\n              :null\n             }\n              <Form onSubmit={this.handleSubmit} loading={this.state.loading}>\n                {this.montaCampos()}  \n                <Form.Button content='Save' primary floated='right' size='large' />\n              </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        </Container>   \n      </div>\n    );\n\n  }\n }\n\n const mapStateToProps = ({ user, studio, game }) => ({\n  token: user.token, \n  studio: studio.studio,\n  game: game.game\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addGame,\n      updateGame,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameFormView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Loader,\n  Dimmer\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Link, BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n// Telas\nimport StudioDashboardView from './Dashboard'\nimport StudioGamesView from './Games'\n//import StudioSettingsView from './Settings'\nimport StudioFormView from './Form'\nimport GameFormView from '../Game/Form'\n\nimport {\n  getStudio,\n  setCurrentStudio\n} from '../../modules/studio'\n\nclass StudioView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:true,\n      itemsPerRow:3\n    };\n  }\n\n  componentDidMount(){\n    this.getStudio()\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      //this.getStudio()\n    }\n  }\n\n  getStudio(){\n    this.setState({loading:true})  \n    this.props.getStudio({id:this.props.match.params.id}, this.props.token, (dados)=>{\n      this.props.setCurrentStudio(dados)\n      this.setState({loading:false})  \n    },\n    (err)=>{\n      console.log('GetStudio CallbackError: ', err)\n      this.setState({loading:false})  \n      this.props.history.goBack()\n    })\n\n    /*\n    this.setState({loading:true})  \n    let studio = this.props.studios.filter(row => row.id == this.props.match.params.id)\n    setTimeout(() => {\n      this.props.setCurrentStudio(studio[0])\n      this.setState({loading:false})  \n    }, 300); // Tempo de loading fake\n    */\n  }\n\n  go(url){\n    this.props.history.push('/studio/'+ (this.props.match.params.id) + url)\n  }\n\n  render(){\n    if(this.state.loading){\n      return(\n        <Container style={{ marginTop: '4em' }}>\n          <Segment basic>\n              <Loader active>Loading Studio...</Loader>\n          </Segment>\n        </Container>\n      )\n    }else{\n      return (\n        <div>\n        <Container style={{ marginTop: '1em' }}>\n          <Grid columns={2}  stackable>\n            <Grid.Column width={4}>\n              <Menu pointing vertical>\n                <Menu.Item\n                    name='Dashboard'\n                    active={false}\n                    onClick={()=>{ this.go('') }}\n                    icon='line graph layout'\n                  />\n                <Menu.Item\n                    name='Games'\n                    active={false}\n                    onClick={()=>{ this.go('/games') }}\n                    icon='game layout'\n                  />\n                <Menu.Item\n                    name='Settings'\n                    active={false}\n                    onClick={()=>{ this.go('/settings') }}\n                    icon='setting layout'\n                  />\n              </Menu>\n            </Grid.Column>\n            <Grid.Column stretched width={12}>\n                <Switch>\n                  <Route exact path=\"/studio/:id\" component={StudioDashboardView} />\n                  <Route exact path=\"/studio/:id/games\" component={StudioGamesView} />\n                  {/*<Route exact path=\"/studio/:id/settings\" component={StudioSettingsView} />*/}\n                  <Route exact path=\"/studio/:id/settings\" component={StudioFormView} />\n                  <Route exact path=\"/studio/:id/game-add\" component={GameFormView} />\n                </Switch>\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </div>\n      )\n    }\n  }\n }\n\n const mapStateToProps = ({ user, studio }) => ({\n  studios: studio.studios,\n  token: user.token\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getStudio,\n      setCurrentStudio,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudioView)\n\n","import React, {Component, Fragment} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Popup\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route, Link } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  listStudio,\n  removeStudio\n} from '../../modules/studio'\n\nclass StudiosListView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemsPerRow:3\n    };\n  }\n\n  componentDidMount(){\n    this.props.listStudio(this.props.token)\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount')\n  }\n\n  componentWillUpdate(){\n    console.log('componentWillUpdate')\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      // roda sempre que atualiza\n    }\n  }\n\n  go(url){\n    this.props.history.push('/studios'+ url)\n  }\n\n  removeStudio(studio){\n    this.props.removeStudio(studio, this.props.token)\n  }\n\n  render(){\n    if(this.props.studios.length===0){\n      return(\n          <Segment placeholder>\n          <Header icon>\n            <Icon name='game' />\n              You have no studio. Register a studio and start managing your games\n          </Header>\n          <Button primary onClick={()=>{ this.go('/add') }} >Add Studio</Button>\n        </Segment>\n        )\n    }\n    return (\n      <div>\n        <Grid columns={1}  stackable>\n          <Grid.Column stretched width={16}>\n          <Segment >\n            <Header floated='left'>\n              <Icon name='gamepad' />\n              <Header.Content>\n                Studios\n              <Header.Subheader>Manage your Studios</Header.Subheader>\n              </Header.Content>\n            </Header>\n\n              <Button\n                onClick={()=>{ this.go('/add') }}\n                floated='right'\n                color='blue'\n                content='Add New'\n                icon='add'\n                labelPosition='left'\n              />\n            <Button.Group floated='right' >\n              <Button onClick={()=>{this.setState({itemsPerRow:2})}}>2</Button>\n              <Button.Or text='/' />\n              <Button onClick={()=>{this.setState({itemsPerRow:3})}}>3</Button>\n            </Button.Group>\n          </Segment>\n\n            <Card.Group itemsPerRow={this.state.itemsPerRow} doubling stackable>\n              {this.props.studios.map((studio, index) => (\n                <Card \n                  key={`game-${index}`}\n                  //to={`/studio/${studio.id}`} \n                  as={'a'}\n                  raised \n                  color='blue'\n                  >\n                  \n                  {/*<Image src={studio.image} wrapped ui={false} />*/}\n\n                  <Card.Content>\n                    <Fragment>\n                      {/*<Image floated='right' size='tiny' src={studio.image} />*/}\n                      <Card.Header>{studio.name}</Card.Header>\n                      {/*<Card.Description>{studio.description}</Card.Description>*/}\n                      {/*<Card.Meta>{studio.created_at}</Card.Meta>*/}\n                    </Fragment>\n                  </Card.Content>\n                  <Card.Content extra >\n\n                    <Button.Group basic size='medium' floated='right'>\n                      <Popup trigger={ <Button color='red' icon='trash alternate' onClick={()=>{this.removeStudio(studio) } } />} content='Remove'/>\n                      {/*<Popup trigger={ <Button icon='users' />} content='Users'/>*/}\n                      <Popup trigger={ <Button icon='settings' as={Link} to={`/studio/${studio.id}/settings`} />}  content='Settings'/>\n                      <Popup trigger={ <Button icon='game' as={Link} to={`/studio/${studio.id}/games`} />}  content='Games'/>\n                      <Popup trigger={ <Button icon='edit' as={Link} to={`/studio/${studio.id}`} />}  content='Edit'/>\n                    </Button.Group>\n\n                  </Card.Content>\n                </Card>\n                ))}\n            </Card.Group>\n\n            </Grid.Column>\n          </Grid>\n      </div>\n    );\n  }\n }\n\n const mapStateToProps = ({ user, studio }) => ({\n  token: user.token,\n  studios: studio.studios\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      listStudio,\n      removeStudio,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudiosListView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Breadcrumb\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Link, BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n// Telas\nimport StudiosListView from './List'\n//import StudiosAddView from './Add'\nimport StudioFormView from '../Studio/Form'\n\nimport {\n  setCurrentStudio\n} from '../../modules/studio'\n\n// Teste\nconst sections = [\n  { key: 'home', content: 'Home', link: true },\n  { key: 'studios', content: 'Studios', link: true },\n  { key: 'list', content: 'List', active: true },\n]\n\nclass StudiosView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemsPerRow:3\n    };\n  }\n\n  componentDidMount(){\n    // Reseta current studio\n    this.props.setCurrentStudio(null)\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      //\n    }\n  }\n\n  go(url){\n    this.props.history.push('/studios'+ url)\n  }\n\n  render(){\n    return (\n      <div>\n\n      {/*<Breadcrumb divider='/' sections={sections} />  */}\n      <Container style={{ marginTop: '1em' }}>\n\n      <Grid columns={2}  stackable>\n\n        <Grid.Column width={4}>\n\n          <Menu pointing vertical>\n            <Menu.Item\n              name='List'\n              active={false}\n              onClick={()=>{ this.go('/list') }}\n              icon='list layout'\n            />\n            <Menu.Item\n              name='Add'\n              active={false}\n              onClick={()=>{ this.go('/add') }}\n              icon='add'\n            />\n          </Menu>\n          \n        </Grid.Column>\n        <Grid.Column stretched width={12}>\n            <Switch>\n              <Route exact path=\"/studios/list\" component={StudiosListView} />\n              <Route exact path=\"/studios/add\" component={StudioFormView} />\n              {/*<Route exact path=\"/studios/:id/edit\" component={StudiosAddView} />*/}\n            </Switch>\n          </Grid.Column>\n        </Grid>\n\n      </Container>\n      </div>\n    );\n\n  }\n }\n\n const mapStateToProps = ({ user }) => ({\n\n  token: user.token,\n  isAuthenticated:user.isAuthenticated\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      setCurrentStudio,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudiosView)\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Loader\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n/*\nimport {\n} from '../../modules/games'\n*/\n\nclass StudioDashboardView extends Component {\n\n  // TODO: remover esse loading, deixar somente na index\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false\n    };\n  }\n\n  componentDidMount(){\n    //this.getStudio()\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    /*\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      this.getStudio()\n    }\n    */\n  }\n\n  /*\n  getStudio(){\n    this.setState({loading:true})  \n    let studio = this.props.studios.filter(row => row.id == this.props.match.params.id)\n    setTimeout(() => {\n      this.setState({studio: studio[0] , loading:false})  \n      return true\n    }, 10);\n    \n  }\n  */\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n  render(){\n    if(this.state.loading){\n      return(\n        <Segment>\n          <Loader active />\n        </Segment>\n      )\n    }else{\n      return (\n        <div>\n        <Container>\n          <Grid columns={1}  stackable>\n            <Grid.Column stretched width={16}>\n                <Segment>\n                  <Header as='h3' floated='left'\n                      icon='chart line'\n                      content={'Dashboard: '+ this.props.game.name}\n                      subheader='See statistics for your Game'\n                    />            \n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Container>   \n        </div>\n      )\n    }\n  }\n }\n\n const mapStateToProps = ({ user, studio, game }) => ({\n  studio: studio.studio,\n  game:game.game\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudioDashboardView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Message,\n  Form,\n  Segment,\n  Divider\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Route } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport {\n  updateGame\n} from '../../modules/game'\n\n\nclass GameSettingsView extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = { \n    loading:false, \n    message:false,\n    error:false,\n    studio: '', \n    id: '', \n    name: '', \n    resume: '', \n    genre: '', \n    description: '', \n    image: ''\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n  handleChangeFile = (e) => {\n    this.setState({ [e.target.name]: e.target.files[0] })\n  }\n\n  handleSubmit = () => {\n    this.enviar()\n  }\n\n  componentDidMount(){\n    this.setState(this.props.game)\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    // Toda vez\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      this.setState(this.props.game)\n    }\n  }\n\n  enviar(){\n    this.setState({loading:true, message:false, error:false})\n    this.props.updateGame(this.state, this.props.token, \n      (data)=>{\n        if(data){\n          console.log('Sucesso: ', data)\n          this.setState({message:true, loading:false})\n          //this.go('/studio/list')\n          //this.reset()\n        }\n      }, \n      (err)=>{\n        this.setState({message:false, error:true, loading:false})\n      })\n  }\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n  render(){\n    const { \n      id,\n      name, \n      resume,\n      genre,\n      description, \n      image,\n    } = this.state\n    return (\n      <div>\n       <Container>\n        <Grid columns={1}  stackable>\n          <Grid.Column stretched width={16}>\n            <Segment attached>\n              <Header as='h3' floated='left'\n                icon='setting'\n                content={'Settings: '+ this.props.game.name}\n                subheader='Manage your Game'\n              />\n            </Segment>\n\n            <Segment>\n\n              {this.state.message? \n                <Message\n                  success\n                  header='Game successfully saved!'\n                  content='Select studio from the list to manage it.'/>\n                :null}\n\n              {this.state.error? \n                <Message\n                  error\n                  header='Error saving studio!'\n                  content='Check the fields and try again.'/>\n                :null}\n\n              <Form onSubmit={this.handleSubmit} loading={this.state.loading}>\n\n              <Form.Field>\n                <label>Name</label>\n                <Form.Input\n                    placeholder='Name'\n                    name='name'\n                    value={name}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Resume</label>\n                <Form.Input\n                    placeholder='Resume'\n                    name='resume'\n                    value={resume}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Genre</label>\n                <Form.Input\n                    placeholder='Genre'\n                    name='genre'\n                    value={genre}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Description</label>\n                <Form.TextArea\n                    placeholder='description'\n                    name='description'\n                    value={description}\n                    onChange={this.handleChange}\n                  />\n              </Form.Field>\n\n              <Form.Field fluid>\n                <label>Image</label>\n                <input type=\"file\" name=\"image\" onChange={this.handleChangeFile} />\n\n\n                {this.props.game.image?\n                  <p style={{padding:'1em'}}>\n                    <a href={this.props.game.image} target='_blank'>\n                      <Image src={this.props.game.image} size='medium' wrapped rounded />\n                    </a>\n                  </p>\n                :null}\n                \n              </Form.Field>\n              <Form.Button content='Save' primary floated='right' size='large' />\n\n              </Form>\n\n              </Segment>\n\n            </Grid.Column>\n          </Grid>\n        </Container>   \n      </div>\n    );\n\n  }\n }\n\n const mapStateToProps = ({ user, studio, game }) => ({\n  token: user.token, \n  studio: studio.studio,\n  game: game.game\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      updateGame,\n      changePage: () => push('/studio')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameSettingsView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Loader,\n  Dimmer\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Link, BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n// Telas\nimport GameDashboardView from './Dashboard'\nimport GameSettingsView from './Settings'\nimport GameFormView from './Form'\n\n// Game Modules\n//import DlcView from './Dlc'\n//import LeaderboardView from './Leaderboard'\n\nimport {\n  getGame,\n  setCurrentGame\n} from '../../modules/game'\n\n\n\n// Fake Components\nconst TempHeader = (props)=> {\n  return( \n    <div>\n    \n      <Grid columns={1}  stackable>\n        <Grid.Column stretched width={16}>\n            <Segment>\n              <Header as='h3' floated='left'\n                  icon='chart line'\n                  content={props.name}\n                  subheader={props.description}\n                />            \n            </Segment>\n          </Grid.Column>\n        </Grid>\n    \n    </div>\n  )\n}\n\nconst LeaderBoardView = ()=> {\n  return( <TempHeader name='LeaderBoard' description='Manage scores for your games'/>)\n}\nconst DlcView = ()=> {\n  return( <TempHeader name='Dlc' description='Manage Contend Download your games'/>)\n}\nconst StorageView = ()=> {\n  return( <TempHeader name='Storage' description='Manage data for your games'/>)\n}\n\nclass GameView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:true,\n      itemsPerRow:3\n    };\n  }\n\n  componentDidMount(){\n    // Uma vez\n    //this.props.setGames( gamesTemp[(this.props.match.params.id-1)] )  \n    this.getGame()\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    if(prevProps.location.pathname !== this.props.location.pathname){\n      //this.getGame()\n    }\n  }\n\n  getGame(){\n    this.setState({loading:true})  \n\n    this.props.getGame({id:this.props.match.params.id}, this.props.token, (dados)=>{\n      this.props.setCurrentGame(dados)\n      this.setState({loading:false})  \n    },\n    (err)=>{\n      console.log('GetGame CallbackError: ', err)\n      this.setState({loading:false})  \n      this.props.history.goBack()\n    })\n\n    /*\n    let game = this.props.games.filter(row => row.id == this.props.match.params.id)\n    setTimeout(() => {\n      this.props.setCurrentGame(game[0])\n      this.setState({loading:false})  \n    }, 300); // Tempo de loading fake\n    */\n  }\n\n  go(url){\n    this.props.history.push('/game/'+ (this.props.match.params.id) + url)\n  }\n\n  render(){\n    if(this.state.loading){\n      return(\n        <Container style={{ marginTop: '4em' }}>\n          <Segment basic>\n              <Loader active>Loading Game...</Loader>\n          </Segment>\n        </Container>\n      )\n    }else{\n      return (\n        <div>\n        <Container style={{ marginTop: '1em' }}>\n          <Grid columns={2}  stackable>\n\n            <Grid.Column width={4}>\n\n              <Menu vertical >\n                <Image src={this.props.game.image} \n                  rounded\n                  wrapped \n                  label={{\n                    as: 'a',\n                    onClick: ()=>{ this.go('/settings') },\n                    color: 'black',\n                    content: this.props.game.name,\n                    //icon: 'game',\n                    ribbon: 'true',\n                }}\n                />\n              </Menu>\n\n              <Menu vertical>\n\n                <Menu.Item\n                    name='Dashboard'\n                    active={false}\n                    onClick={()=>{ this.go('') }}\n                    icon='line graph layout'\n                  />\n                <Menu.Item\n                    name='Dlc'\n                    active={false}\n                    onClick={()=>{ this.go('/dlc') }}\n                    icon='caret square down'\n                  />\n                <Menu.Item\n                    name='Leaderboard'\n                    active={false}\n                    onClick={()=>{ this.go('/leaderboard') }}\n                    icon='numbered list'\n                  />\n                <Menu.Item\n                    name='Storage'\n                    active={false}\n                    onClick={()=>{ this.go('/Storage') }}\n                    icon='database'\n                  />\n                <Menu.Item\n                    name='Settings'\n                    active={false}\n                    onClick={()=>{ this.go('/settings') }}\n                    icon='setting layout'\n                  />\n              </Menu>\n            </Grid.Column>\n            <Grid.Column stretched width={12}>\n                <Switch>\n                  <Route exact path=\"/game/:id\" component={GameDashboardView} />\n                  <Route exact path=\"/game/:id/leaderboard\" component={LeaderBoardView} />\n                  <Route exact path=\"/game/:id/dlc\" component={DlcView} />\n                  <Route exact path=\"/game/:id/storage\" component={StorageView} />\n                  <Route exact path=\"/game/:id/settings\" component={GameFormView} />\n                </Switch>\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </div>\n      )\n    }\n  }\n }\n\n const mapStateToProps = ({ user, studio, game }) => ({\n  token: user.token,\n  studio: studio.studio,\n  games: game.games,\n  game: game.game\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getGame,\n      setCurrentGame,\n      changePage: () => push('/game')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameView)\n\n","import React, {Component} from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Grid,\n  Image,\n  Card,\n  Icon,\n  Feed,\n  Menu,\n  Segment,\n  Divider,\n  Form,\n  Message\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  login,\n  logout\n} from '../../modules/user'\n\nclass LoginView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false,\n      username:'teste',\n      password:'reggae123',\n      token: null\n    };\n\n    console.log('API_URL', process.env.REACT_APP_API_URL)\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  go(url){\n    this.props.history.push(url)\n  }\n\n  login(){\n    let that = this\n    this.setState({loading:true})\n\n    this.props.login( this.state.username, this.state.password, (success)=>{\n      this.setState({loading:false})\n      if(success){\n        this.go('/studios/list')\n      }else{\n        this.go('/')  \n      }\n    })\n  }\n\n  render(){\n\n    return(\n      <div>\n      <Container style={{ marginTop: '3em' }} >\n      <Segment placeholder basic >\n      <Grid columns={2}  stackable>\n        <Grid.Column>\n          <Form loading={this.state.loading}>\n            <Form.Input\n              icon='user'\n              iconPosition='left'\n              label='Username'\n              placeholder='Username'\n              name='username'\n              onChange={this.handleChange}\n              />\n              \n            <Form.Input\n              icon='lock'\n              iconPosition='left'\n              label='Password'\n              placeholder='Password'\n              type='password'\n              name='password'\n              onChange={this.handleChange}\n            />\n  \n            <Button content='Login' primary fluid size='large' type=\"submit\" onClick={ ()=> { this.login() } } />\n          </Form>\n        </Grid.Column>\n  \n        <Grid.Column verticalAlign='middle'>\n          <Button content='Sign up' icon='signup' size='big' />\n        </Grid.Column>\n      </Grid>\n  \n      <Divider vertical>Or</Divider>\n    </Segment>\n    </Container>  \n    </div>\n    )\n\n    return (\n      <div>\n        <Container style={{ marginTop: '3em' }}>\n          <Grid textAlign='center' style={{ height: '50vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='blue' textAlign='center'>\n                <Image src='/logo192.png' /> Log-in to your account {this.props.token}\n              </Header>\n              <Form size='large'>\n                <Segment stacked>\n                  <Form.Input \n                    fluid icon='user' \n                    iconPosition='left' \n                    placeholder='E-mail address' \n                    onChange={this.handleChange}\n                    />\n                  <Form.Input\n                    fluid\n                    icon='lock'\n                    iconPosition='left'\n                    placeholder='Password'\n                    type='password'\n                    onChange={this.handleChange}\n                  />\n\n                  <Button color='blue' fluid size='large' type=\"submit\" onClick={ ()=> { this.login() } }>\n                    Login\n                  </Button>\n                </Segment>\n              </Form>\n              <Message>\n                New to us? <a href='#'>Sign Up</a>\n              </Message>\n            </Grid.Column>\n          </Grid>\n          </Container>\n      </div>\n    );\n\n  }\n }\n\nconst mapStateToProps = ({ user }) => ({ \n  token: user.token\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      login,\n      logout\n      //changePage: () => push('/index')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginView)\n\n","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Header,\n  Image,\n  Grid,\n  Card,\n  Icon,\n  Feed,\n  Segment\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst features = [\n  {name:'USER ACCOUNTS', description:'Every user is registered and has a profile for other users to find and become friends or join groups and chat.', color:'grey', url:null, image:null},\n  {name:'STÚDIOS (ORGANIZATIONS)', description:'Create studios (organization) and register the games independently.', color:'grey', url:null, image:null},\n  {name:'LEADERBOARDS', description:'Leaderboards are a great way to add a social and competitive element to any game.', color:'grey', url:null, image:null},\n  {name:'Players', description:'Players interacting with your game. They can set records, save games, buy and sell items. What do you imagine.', color:'grey', url:null, image:null},\n  {name:'DLC (Download Content)', description:'Every user is registered and has a profile for other users to find and become friends or join groups and chat.', color:'grey', url:null, image:null},\n  {name:'DATA STORAGE', description:'Save the game data to the cloud. The Storage service offers a simple way to save your players game data to the server.', color:'grey', url:null, image:null}\n]\n\nclass SiteHomeView extends Component {\n\n  render(){\n    const mobile = false\n    return (\n      <div>\n        <Segment\n          //basic\n          //text\n          size='huge'\n          inverted\n          color='violet'\n          textAlign='center'\n          style={{ minHeight: 650, padding: '0em 0em' }}\n          vertical          \n        >\n          {\n          <Container >\n            <Grid columns={2} stackable verticalAlign='top'>\n                <Grid.Column width={10} textAlign='left' >\n\n                  <Header\n                    as='h1'\n                    content='A light backend platform'\n                    inverted\n                    style={{\n                      fontSize: mobile ? '2em' : '2.5em',\n                      fontWeight: 'bold',\n                      marginBottom: 0,\n                      marginTop: mobile ? '1.5em' : '2em',\n                    }}\n                  />\n                  <Header\n                    as='h2'\n                    content='for indie game developers'\n                    inverted\n                    style={{\n                      fontSize: mobile ? '1.5em' : '1.7em',\n                      //fontWeight: 'normal',\n                      marginTop: mobile ? '0.5em' : '0.0em',\n                    }}\n                  />\n\n                  <p style={{ fontSize: '0.85em' }}>\n                  Use an API to manage game services and configure metadata to authorize and authenticate your game. Integrate popular features into your Mobile, Web and Desktop games using as our API.\n                  </p>\n\n                <Button primary size='huge' to=\"/login\" as={Link} >\n                  Get Started\n                  <Icon name='right arrow' />\n                </Button>\n\n                </Grid.Column>\n                <Grid.Column width={6}>\n                  \n                  {<Image src='https://devsquad.com/wp-content/uploads/2019/06/undraw_deliveries_131a_1.png' wrapped ui={false} />}\n                  {/*<Image src='https://ph-files.imgix.net/c82e2d38-f5c6-449f-babd-cc61680a8e49?auto=format'/>*/}\n\n                </Grid.Column>\n              </Grid>\n\n          </Container>\n            }\n        </Segment>\n\n      <Segment  attached>\n        <Container style={{ marginTop: '-5.5em' , marginBottom:'3em'}}>\n\n          <Card.Group itemsPerRow={3}>\n              {features.map((item, i)=>(\n                <Card  \n                  key={'item_'+i}\n                  raised\n                  href='#card-example-link-card'\n                  header={item.name}\n                  ////meta='Friend'\n                  color={item.color}\n                  description={item.description}\n                  style={{padding:'1em'}}\n              />              \n              ))}\n          </Card.Group >\n  \n        </Container>\n      </Segment>\n      </div>\n    );\n\n  }\n }\n\n export default SiteHomeView\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  //Container,\n  Dropdown,\n  Image,\n  Menu,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport {\n  logout\n} from '../../modules/user'\n\nimport {\n  listStudio\n} from '../../modules/studio'\n\nclass AdminNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('NavBar:', this.props)\n    }\n\n  options = [\n    { key: 'user', text: 'Account', icon: 'user' ,  onClick: ()=>{ console.log('Account')}},\n    { key: 'settings', text: 'Settings', icon: 'settings',  onClick: ()=>{ console.log('Settings')}},\n    { key: 'sign-out', text: 'Sign Out', icon: 'sign out', onClick: ()=>{\n      this.props.logout(()=>{ \n        console.log('callback logout: ')\n        })\n      } \n    }\n  ]\n\n  trigger = (\n    <span>\n      <Image avatar src='https://yt3.ggpht.com/a/AGF-l79zD-Uy3Xe772-Np3NlVGHWTTR1JN2EU7P8tA=s900-c-k-c0xffffffff-no-rj-mo' /> Apoena Machado\n    </span>\n  )\n\n  componentDidMount(){\n    this.props.listStudio(this.props.token)\n  }\n\n  componentDidUpdate( prevProps, prevState, snapshot){\n    if(prevProps.studio !== this.props.studio){\n      //this.props.listStudio(this.props.token)  \n      console.log('Atualiza AdminNavbar: ', this.props.studios, this.props.studio)\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Menu stackable >\n            <Menu.Item header>\n                <Link to=\"/\" style={{color:'#000'}} >GAMEAPI</Link>\n            </Menu.Item>\n\n\n            <Menu.Item as={Link} to=\"/studios/list\">\n              Studios\n            </Menu.Item>\n\n            {/*\n            <Dropdown item text='Studios'>\n                <Dropdown.Menu >\n                    <Dropdown.Item to=\"/studios/list\" as={Link} text=\"Studios\"/>\n                    <Dropdown.Divider />\n                    {this.props.studios.map((studio, index) => (\n                      <Dropdown.Item \n                        to={'/studio/'+studio.id} as={Link} \n                        text={studio.name}\n                        icon='game'\n                      />\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown> \n            */}          \n\n            {this.props.studio?\n              <Dropdown item text={this.props.studio.name}>\n                <Dropdown.Menu >\n                    <Dropdown.Item to={'/studio/'+this.props.studio.id} as={Link} text=\"Dashboard\" icon='line graph layout'/>\n                    <Dropdown.Item to={'/studio/'+this.props.studio.id+ '/games'} as={Link} text=\"Games\" icon='game layout'/>\n                    <Dropdown.Item to={'/studio/'+this.props.studio.id+ '/settings'} as={Link} text=\"Settings\" icon='setting layout'/>\n                    <Dropdown.Divider />\n                    <Dropdown.Item to={'/studios/add'} as={Link} text=\"Add New Studio\" icon='add'/>\n                </Dropdown.Menu>\n              </Dropdown> \n            :null}\n\n\n            <Menu.Menu position='right'> \n\n            <Dropdown item\n              trigger={this.trigger}\n              options={this.options}\n              pointing='top left'\n              icon={null}\n              />\n\n            </Menu.Menu>\n        </Menu>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, studio }) => ({ \n  token: user.token,\n  studios: studio.studios,\n  studio: studio.studio\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      logout,\n      listStudio\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminNavbar)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Button,\n    Container,\n    Segment,\n    Dropdown,\n    Menu,\n    Image\n  } from 'semantic-ui-react'\n  import 'semantic-ui-css/semantic.min.css'\n\nclass PublicNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('NavBar:', this.props)\n    }\n\n  render() {\n    const fixed = true;\n    return (\n      <>\n        <Segment inverted attached color='violet' style={{border:'0px'}}>\n        <Container >\n        <Menu \n          color='violet'\n          stackable\n          //fixed={fixed ? 'top' : null}\n          inverted={fixed}\n          //pointing={fixed}\n          secondary={fixed}\n          size='large'\n          style={{padding:'0.5em'}}\n         >\n          <Menu.Item header>\n              <Link to=\"/\" style={{}} >\n                GAMEAPI\n              </Link>\n          </Menu.Item>\n\n          <Menu.Item name='about' as={Link}  text=\"About\" to=\"/about-us\" />\n\n          <Dropdown item text='Components'>\n              <Dropdown.Menu>\n                  <Dropdown.Item to=\"/components/tables\" as={Link} text=\"Tables\"/>\n                  <Dropdown.Item to=\"/components/cards\" as={Link} text=\"Cards\"/>\n                  <Dropdown.Item to=\"/components/labels\" as={Link} text=\"Labels\"/>\n              </Dropdown.Menu>\n          </Dropdown>              \n\n          <Menu.Menu position='right'> \n              <Menu.Item>\n                  <Link to=\"/login\"  >Login</Link>\n              </Menu.Item>\n              <Menu.Item>\n                  <Button to=\"/login\" color='blue'>Signup</Button>\n              </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        </Container>\n        </Segment>\n      </>\n    );\n  }\n}\nexport default PublicNavbar;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Segment,\n  Grid,\n  Header,\n  List,\n  Image,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass PublicFooter extends React.Component {\n\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <Segment basic style={{padding: '2em 0em'}}>\n          {/*\n          <Container>\n            <Grid divided  stackable>\n              <Grid.Row>\n                <Grid.Column width={3}>\n                  <Header  as='h4' content='About' />\n                  <List link >\n                    <List.Item as='a'>Sitemap</List.Item>\n                    <List.Item as='a'>Contact Us</List.Item>\n                    <List.Item as='a'>Religious Ceremonies</List.Item>\n                    <List.Item as='a'>Gazebo Plans</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header  as='h4' content='Services' />\n                  <List link >\n                    <List.Item as='a'>Banana Pre-Order</List.Item>\n                    <List.Item as='a'>DNA FAQ</List.Item>\n                    <List.Item as='a'>How To Access</List.Item>\n                    <List.Item as='a'>Favorite X-Men</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Header as='h4' >\n                    Footer Header\n                  </Header>\n                  <p>\n                    Extra space for a call to action inside the footer that could help re-engage users.\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n          */}\n        </Segment>\n      </>\n    );\n  }\n}\n\nexport default PublicFooter\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Segment,\n  Grid,\n  Header,\n  List,\n  Image,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass AdminFooter extends React.Component {\n\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <>\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\n\n        {/*\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='About' />\n                  <List link inverted>\n                    <List.Item as='a'>Sitemap</List.Item>\n                    <List.Item as='a'>Contact Us</List.Item>\n                    <List.Item as='a'>Religious Ceremonies</List.Item>\n                    <List.Item as='a'>Gazebo Plans</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='Services' />\n                  <List link inverted>\n                    <List.Item as='a'>Banana Pre-Order</List.Item>\n                    <List.Item as='a'>DNA FAQ</List.Item>\n                    <List.Item as='a'>How To Access</List.Item>\n                    <List.Item as='a'>Favorite X-Men</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Header as='h4' inverted>\n                    Footer Header\n                  </Header>\n                  <p>\n                    Extra space for a call to action inside the footer that could help re-engage users.\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        */}\n        </Segment>\n      </>\n    );\n  }\n}\n\nexport default AdminFooter\n","import React, {Component} from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport {\n  Container,\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\n//import { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\n// Paginas\n//import Home from '../home'\nimport About from './about'\nimport CardsView from './Cards'\nimport TablesView from './Tables'\nimport LabelsView from './Labels'\nimport StudioView from './Studio'\nimport StudiosView from './Studios'\nimport GameView from './Game'\nimport LoginView from './Auth/index'\n\n// Site\nimport SiteHomeView from './Site/Home'\n\n//import Adminlayout from '../../layouts/AdminLayout'\nimport AdminNavbar from '../components/NavBar/AdminNavbar'\nimport PublicNavbar from '../components/NavBar/PublicNavbar'\nimport AdminFooter from '../components/Footer/AdminFooter'\nimport PublicFooter from '../components/Footer/PublicFooter'\n\n//var isAuthenticated = false \n\n// feito com esse modelo https://github.com/notrab/create-react-app-redux\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  teste(){\n    console.log('Apoena testando')\n  }\n\n  privateRoute({ component, ...rest}) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          props.isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n            <Redirect to={{ pathname: \"/login\", state: {from: props.location, },}}/>\n          )\n        }\n      />\n    );\n  }\n\n  publicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          props.isAuthenticated ? (\n            <Redirect to={{ pathname: \"/\",}}/>\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n\n  render(){\n\n    if (this.props.isAuthenticated){\n      return (\n        <div>\n           <Container style={{ marginTop: '1em' }}>\n              {<AdminNavbar />}\n              <Switch>\n                <Route exact path=\"/\" component={About} />\n                <Route path=\"/studios\"    component={StudiosView} />\n                <Route path=\"/studio/:id\" component={StudioView}  />\n                <Route path=\"/game/:id\"  component={GameView} />\n              </Switch>\n          </Container>\n          \n      </div>\n      )\n    }else{\n      return (\n        <div> \n              {<PublicNavbar />}    \n\n              <Switch>\n                <Route exact path=\"/home\" component={SiteHomeView} />\n                <Route exact path=\"/\" >\n                  <Redirect to='/home'/>\n                </Route>\n                {\n                <Route exact path=\"/gameapi-admin-react\" >\n                  <Redirect to='/home' />\n                </Route>\n                }\n                <Route path=\"/login\" component={LoginView} />\n                <Route path=\"/components/cards\" component={CardsView} />\n                <Route exact path=\"/components/tables\" component={TablesView} />\n                <Route exact path=\"/components/labels\" component={LabelsView} />  \n                <Route path=\"/about-us\" component={About} />\n                <Route component={SiteHomeView} />\n              </Switch>\n\n              {<PublicFooter />}\n        </div>\n      )\n\n        /*\n      return (\n        <div>\n           <Container style={{ marginTop: '1em' }}>\n  \n              {<PublicNavbar />}\n  \n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={LoginView} />\n                <Route exact path=\"/components/cards\" component={CardsView} />\n                <Route exact path=\"/components/tables\" component={TablesView} />\n                <Route exact path=\"/components/labels\" component={LabelsView} />  \n                <Route path=\"/about-us\" component={About} />\n              </Switch>\n          </Container>\n      </div>\n      )\n      */\n    }\n  }\n }\n\n\n const mapStateToProps = ({ user }) => ({\n  user: user,\n  token: user.token,\n  isAuthenticated:user.isAuthenticated\n})\n\nexport default connect(\n  mapStateToProps\n  //mapDispatchToProps\n)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/App'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}